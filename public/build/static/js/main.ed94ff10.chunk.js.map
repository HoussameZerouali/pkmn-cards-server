{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Auth/UserProvider.jsx","components/Auth/withUser.jsx","components/NavMain.jsx","pages/Home.jsx","components/Forms/FormSignin.jsx","pages/Signin.jsx","components/Forms/FormSignup.jsx","pages/Signup.jsx","components/ProtectedRoute.jsx","pages/Profile.jsx","components/CardsList/OneCardItemList.jsx","components/Forms/FormField.jsx","components/SearchBar/SearchBar.jsx","pages/AllCards.jsx","components/OneCard/ActionButtons.jsx","components/Auctions/OneOffer.jsx","components/Auctions/OffersTable.jsx","components/OneCard/CardInfo.jsx","components/OneCard/OneCardContainer.jsx","components/Exchange/OneCardToExchange.jsx","components/Exchange/TableCardsOpenForExchange.jsx","components/OneCard/OneCard.jsx","components/Auctions/AuctionItem.jsx","pages/Auctions.jsx","components/Forms/FormSale.jsx","components/CardsList/BtnExchangeStatus.jsx","components/CardsList/CardsList.jsx","components/Auctions/UserAuctionItem.jsx","pages/UserAuctions.jsx","components/Exchange/OpenForExchange.jsx","components/Exchange/UserCardsOpenForExchange.jsx","App.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","console","log","apiHandler","signup","userInfo","post","then","res","catch","signin","logout","get","isLoggedIn","getOneCard","id","getItems","getOneCardFromApi","getApiByPage","page","filterApiByName","name","getAllUserCards","addCard","card","updateCard","updatedCard","patch","getUserCollection","type","getOneUserCard","createBid","bid","deleteBid","delete","findCardsOnSale","findUserAuctions","findBid","updatedBids","newBid","getAllUserCardsFromApiCard","apiId","getCardsOnSale","tcgId","getAllCardsOpenForExchange","getAllCardsOneOfApiIdOpenForExchange","UserContext","React","createContext","UserProvider","state","user","isLoading","setUser","setState","removeUser","authValues","this","Provider","value","props","children","Component","withUser","ComponentToPassUserContextTo","Consumer","context","className","exact","to","Fragment","email","onClick","Home","FormSignin","password","handleChange","event","key","target","handleSubmit","preventDefault","onChange","onSubmit","htmlFor","withRouter","Signin","FormSignup","username","history","push","Signup","component","rest","render","Profile","OneCardItemList","src","images","small","alt","height","width","FormField","label","SearchBar","handleNameInputChange","bind","e","AllCards","cards","loading","prevY","input","a","filteredCards","pokemonTCGId","err","getPokemons","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","curPage","loadingTextCSS","display","style","minHeight","map","ref","margin","OneCardActions","userCards","length","_id","OneOffer","currentBid","bidId","previousBid","offer","updatedBid","owner","cardState","initialPrice","endDate","OffersTable","offers","CardInfo","pokemon","subtypes","supertype","hp","abilities","text","attacks","damage","weaknesses","resistances","retreatCost","convertedRetreatCost","series","number","set","total","rarity","symbol","artist","OneCardContainer","large","OneCardToExchange","cardmarket","prices","averageSellPrice","TableCardsOpenForExchange","OneCard","formDisplayed","cardsOnSale","cardsOpenForExchange","match","params","apiInfo","openForExchange","ActionButtons","putCardOnSale","showForm","displaySaleForm","AuctionItem","link","Bids","cardPromises","Promise","all","responses","populatedCards","i","SellCardForm","item","startDate","Date","now","status","bidCreated","onSale","price","cardInfo","selected","endTime","BtnExchangeStatus","handleClick","CardsList","searchName","FormSale","UserAuctionItem","handleAccept","auction","buyer","handleDelete","UserAuctions","auctions","myAuctions","promises","populatedBids","OpenForExchange","UserCardsOpenForExchange","App","path","Auctions","OpenForExchanges","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ed94ff10.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\r\n});\r\n\r\nfunction errorHandler(error) {\r\n  if (error.response.data) {\r\n    console.log(error.response && error.response.data);\r\n    throw error;\r\n  }\r\n  throw error;\r\n}\r\n\r\nconst apiHandler = {\r\n  service,\r\n\r\n  signup(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signup\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  signin(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signin\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  logout() {\r\n    return service\r\n      .get(\"/api/auth/logout\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  isLoggedIn() {\r\n    return service\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n  \r\n  getOneCard(id) {\r\n    return service \r\n      .get(\"/api/me/cards/\" + id)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  // getItems() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  getItems() {\r\n    return service\r\n    .get(\"/api/pokemonApi/all\")\r\n    .then((res) => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  //old getItems => getAllCards => will get all the cards from the API\r\n  // getAllCards() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n\r\n  getOneCardFromApi(id) {\r\n    return service\r\n    .get(`/api/pokemonApi/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getApiByPage(page) {\r\n    return service \r\n    .get(`/api/pokemonApi/all/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  filterApiByName(name) {\r\n    return service\r\n    .get(`/api/pokemonApi/search/${name}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getAllCards => getAllUserCards removed /api \r\n  getAllUserCards() {\r\n    return service \r\n    .get(\"/api/me/cards\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  addCard(card) {\r\n    return service\r\n    .post(\"/api/me/cards/add\", card)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  updateCard(id, updatedCard) {\r\n    return service\r\n    .patch(`/api/me/cards/${id}/edit`, updatedCard)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  //User Interaction\r\n  //old findUserCollection => getUserCollection removed /api\r\n  getUserCollection(type) {\r\n    return service \r\n    .get(`/api/me/collection/${type}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getOneUserCard(id){\r\n    return service\r\n    .get(\"/api/me/cards/\" + id)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  // addCardToCollection(collection, updatedCardList) {\r\n  //   return service\r\n  //   .patch(`/api/me/collection/${collection}`, updatedCardList)\r\n  //   .then(res => res.data)\r\n  //   .catch(errorHandler)\r\n  // },\r\n\r\n\r\n  // Bids \r\n  //create a new bid\r\n  createBid(bid){\r\n    return service\r\n    .post('/api/bids/create', bid)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteBid(bid){\r\n    return service\r\n      .delete(`/api/bids/${bid}`)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  //?? delete this i think\r\n  findCardsOnSale(){\r\n    return service\r\n    .get(`/api/bids`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  findUserAuctions(){\r\n    return service\r\n      .get(\"/api/profile/auctions\")\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n  \r\n\r\n\r\n  findBid(id){\r\n    return service\r\n    .get(`/api/bids/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n},\r\n\r\n\r\n  updatedBids(id, newBid){\r\n      return service\r\n      .patch(`/api/bids/${id}`, newBid)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n\r\n  getAllUserCardsFromApiCard(apiId) {\r\n    return service\r\n    .get(\"/api/me/cards/all/\" + apiId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //Get all the cards that are on sell\r\n  getCardsOnSale(tcgId){\r\n    return service\r\n    .get(\"/api/cards/bids/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOpenForExchange() {\r\n    return service \r\n    .get(\"/api/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOneOfApiIdOpenForExchange(tcgId) {\r\n    return service \r\n    .get(\"/api/exchanges/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  \r\n}\r\n\r\nexport default apiHandler;\r\n","import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n","import React, { Component } from \"react\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    apiHandler\r\n      .isLoggedIn()\r\n      .then((data) => {\r\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\r\n      });\r\n  }\r\n\r\n  setUser = (user) => {\r\n    this.setState({ user, isLoggedIn: true });\r\n  };\r\n\r\n  removeUser = () => {\r\n    this.setState({ user: null, isLoggedIn: false });\r\n  };\r\n\r\n  render() {\r\n    //  Setup all the values/functions you want to expose to anybody reading\r\n    // from the AuthContext.\r\n    const authValues = {\r\n      user: this.state.user,\r\n      setUser: this.setUser,\r\n      removeUser: this.removeUser,\r\n      isLoggedIn: this.state.isLoggedIn,\r\n      isLoading: this.state.isLoading,\r\n    };\r\n\r\n    return (\r\n      <UserContext.Provider value={authValues}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProvider;\r\n","import React from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n// This is what we call a HOC (Higher Order Component).\r\n// It takes a component as a parameter and it returns a component.\r\n// This technique can be used to abstract some logic in order to pass\r\n// some data down as props to the component sent as parameter.\r\n\r\n// The use case of this one is to make it easy to access the user context to\r\n// any component in our app.\r\n\r\n/* ******************************************************** */\r\n\r\n//  How to use:  =>\r\n// YourComponent.jsx\r\n// import React from \"react\"\r\n// function or class YourComponent()\r\n//\r\n// ... your implementation.\r\n//\r\n// export default withUser(YourComponent)\r\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\r\n\r\n// This component is not exported as default, so you have to import it\r\n// this way :\r\n// import { withUser } from \"../relative/path/to/this/file\"\r\n\r\nexport const withUser = (ComponentToPassUserContextTo) => {\r\n  return function (props) {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {(context) => (\r\n          <ComponentToPassUserContextTo {...props} context={context} />\r\n        )}\r\n      </UserContext.Consumer>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withUser } from \"../components/Auth/withUser\";\r\nimport apiHandler from \"../api/apiHandler\";\r\n\r\nimport \"../styles/NavMain.css\";\r\n\r\nconst NavMain = (props) => {\r\n  const { context } = props;\r\n\r\n  function handleLogout() {\r\n    apiHandler\r\n      .logout()\r\n      .then(() => {\r\n        context.removeUser();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <nav className=\"NavMain\">\r\n      <NavLink exact to=\"/\">\r\n        <h3 className=\"logo\">App name</h3>\r\n      </NavLink>\r\n      <ul className=\"nav-list\">\r\n        {context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/profile/cards\">User Cards</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/auctions\">Auctions</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/exchanges\">User Exchanges</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile\">\r\n                {context.user && context.user.email}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <p onClick={handleLogout}>Logout</p>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n        {!context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/signin\">Log in</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/signup\">Create account</NavLink>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withUser(NavMain);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>Home</h1>  \r\n          <p><Link to=\"/cards\">See all cards</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { withUser } from \"../Auth/withUser\";\r\n\r\nclass FormSignin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const key = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signin(this.state)\r\n      .then((data) => {\r\n        this.props.context.setUser(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Display error message here, if you set the state\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n        <h2>Signin</h2>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignin));\r\n","import React from \"react\";\r\nimport FormSignin from \"../components/Forms/FormSignin\";\r\n\r\nconst Signin = (props) => {\r\n  return <FormSignin />;\r\n};\r\n\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withUser } from \"../Auth/withUser\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\n\r\nclass FormSignup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    const key = event.target.name;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signup(this.state)\r\n      .then(() => {\r\n        this.props.history.push(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Signup</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.username}\r\n          type=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.email}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.password}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignup));\r\n","import React from \"react\";\r\nimport FormSignup from \"../components/Forms/FormSignup\";\r\n\r\nconst Signup = (props) => {\r\n  return <FormSignup />;\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { withUser } from \"./Auth/withUser\";\r\n\r\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\r\n  if (context.isLoading) {\r\n    return null;\r\n  } else if (context.isLoggedIn) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  } else {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n};\r\n\r\nexport default withUser(ProtectedRoute);\r\n","import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Protected profile</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\n\nconst OneCardItemList = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.card.id}>\n        <img src={props.card.images.small} alt=\"\" height=\"400px\" width=\"350px\"/>\n        <div>{props.card.name}</div>\n        {props.children}\n        </div>\n    )\n}\n\nexport default OneCardItemList\n","import React from 'react'\n\nconst FormField = (props) => {\n    return (\n        <div className=\"FormField\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormField\n","import React, { Component } from 'react';\nimport FormField from '../Forms/FormField';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n    }\n\n    handleNameInputChange(e) {\n        this.props.handleNameInputChange(e.target.value)\n    };\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <form onSubmit={this.props.onSubmit}>\n                    <FormField>\n                        <input\n                        type=\"text\"\n                        value={this.props.name}\n                        onChange={this.handleNameInputChange}\n                        name=\"name\"\n                        />\n                    </FormField>\n                    <button type='submit'>Search</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar\n","import React, { Component } from 'react';\r\nimport '../pages/AllCards.css'\r\nimport OneCardItemList from '../components/CardsList/OneCardItemList'\r\nimport apiHandler from '../api/apiHandler';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class AllCards extends Component {\r\n    state = {\r\n        cards: [],\r\n        loading: false,\r\n        page: 1,\r\n        prevY: 0,\r\n        name: \"\"\r\n    }\r\n    // We need to show only the pokemons whose cards are present in our DB\r\n\r\n    getPokemons(page){\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        apiHandler.getApiByPage(page)\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({cards: [...this.state.cards, ...res.data]});\r\n            // console.log(this.state.cards)\r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        // axios.get(`https://api.pokemontcg.io/v2/cards?page=${page}&pageSize=40`).then((res) => { \r\n        //     this.setState({cards: [...this.state.cards, ...res.data.data]});\r\n        //     console.log(this.state.cards)\r\n        //     this.setState({loading: false});\r\n        // }).catch(err => { console.log(err) })\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getPokemons(this.state.page);\r\n\r\n        var options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1.0\r\n        }\r\n\r\n        this.observer = new IntersectionObserver(\r\n            this.handleObserver.bind(this),\r\n            options\r\n        );\r\n\r\n        this.observer.observe(this.loadingRef)\r\n    }\r\n\r\n    handleObserver(entities, observer){\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y){\r\n           \r\n            const curPage = this.state.page + 1;\r\n            this.getPokemons(curPage);\r\n            this.setState({page: curPage})\r\n        }\r\n        this.setState({prevY: y})\r\n    }\r\n\r\n    handleNameInputChange = async (input) => {\r\n        // const key = event.target.name;\r\n        // const value = event.target.value;\r\n        this.setState({\r\n            name: input\r\n        })\r\n        const filteredCards = await apiHandler.filterApiByName(this.state.name)\r\n        .then(cards => this.setState({\r\n            cards: filteredCards\r\n        }))\r\n    }\r\n\r\n    addCard = async (apiId) => {\r\n        try {\r\n            await apiHandler.addCard({pokemonTCGId: apiId});\r\n        } catch (error) {console.error(error)}\r\n    }\r\n\r\n    render() {\r\n        const loadingCSS = {\r\n            height: \"100px\",\r\n            margin: \"30px\"\r\n          };\r\n\r\n        const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <React.Fragment>\r\n                    <SearchBar \r\n                    name={this.state.name}\r\n                    handleNameInputChange={this.handleNameInputChange}\r\n                    />\r\n                </React.Fragment>\r\n                \r\n\r\n                <div style={{ minHeight: \"800px\", display: \"flex\", \"flexWrap\": \"wrap\" }}>\r\n                {this.state.cards.map(card => (\r\n                    <OneCardItemList card={card}>\r\n                        <div>\r\n                            <Link to={\"/cards/\" + card.id}>Card details</Link>\r\n                            <button onClick={() => {this.addCard(card.id)}}>Add Card</button>\r\n                        </div>\r\n                    </OneCardItemList>\r\n\r\n                ))}\r\n                </div>\r\n                <div\r\n                ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                style={loadingCSS}\r\n                >\r\n                <span style={loadingTextCSS}>Loading...</span>\r\n                </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllCards\r\n\r\n","import React, { Component } from 'react';\n\nclass OneCardActions extends Component {\n\n    render() {\n        const { isLoggedIn, userCards } = this.props.children;\n\n        return (\n            <div>\n                <div>\n                    \n                    {isLoggedIn && \n                    userCards.length === 0 && \n                    <button onClick={this.props.addCard}>Add to my collection</button> } {/* user indicates that they own this card */}\n\n                    {isLoggedIn && \n                    userCards.length > 0 && \n                    <div>\n                        <p>You have {userCards.length} {userCards.length === 1 ? \"version\" : \"versions\"} of this card.</p>\n                        <button onClick={this.props.addCard}>Add another to my collection</button>\n                    </div>}\n\n                    {/* {isLoggedIn &&\n                    userCards.length > 0 && \n                    <button onClick={() => this.props.sellCard(userCards._id)}>Sell</button>} user wants to sell this card */}\n\n                    {isLoggedIn && userCards.map(card => {\n                        return(\n                            <div key={card._id}>\n                                \n                            </div>\n                        )\n                    })}\n\n                    {isLoggedIn && \n                    <div>All the current offers : </div>}\n                    \n                    {!isLoggedIn && \n                    <div>See offers</div>} {/* user seeks to make a bid or exchange to get this card */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OneCardActions\n\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\n\nexport class OneOffer extends Component {\n\n    state = {\n        currentBid: 0,\n        bidId: \"\",\n        previousBid: this.props.offer.bid.currentBid,\n        bid: {},\n    }\n\n\n\n    async componentDidMount(){\n        const bid = await apiHandler.findBid( this.props.offer.bid._id)\n        this.setState({\n            bid: bid\n        })\n        console.log(\"Bid called in oneOffer \",  this.state.bid)\n    }\n\n\n    componentDidUpdate(){\n        \n    }\n\n\n    handleChange = (event) => {\n        const key = event.target.name\n        const value = event.target.value\n        this.setState({\n            [key]: value, \n        })\n    }\n\n    handleSubmit = (id) => {\n        console.log(\"HandleSubmit\")\n        if(this.state.currentBid < this.state.previousBid) {\n            console.log(\"current bid is too low\")\n        } else {\n            const updatedBid = {currentBid: this.state.currentBid}\n            apiHandler.updatedBids(id, updatedBid)\n            this.setState({\n                bid: updatedBid\n            })\n           \n        }\n        \n    }\n\n    \n\n    render() {\n        return (\n            <tr key={this.state.bid._id}>\n            <td>{this.props.offer.owner.email}</td>\n            <td>{this.props.offer.cardState}</td>\n            <td>{this.props.offer.bid.initialPrice} $</td>\n            <td>{this.state.bid.currentBid ? `${this.state.bid.currentBid} $` : \"Be the first to Bid\"}</td>\n            <td>{this.props.offer.bid.endDate}</td>\n            <td>\n                <input \n                    type=\"number\" \n                    name=\"currentBid\" \n                    value={this.state.currentBid}                                          \n                    onChange={this.handleChange} \n                    // min={this.state.bid.bid.currentBid}\n            />\n            </td>\n            <td>\n                <button  onClick={() => this.handleSubmit(this.state.bid._id)} >\n                    Place Bid\n                    </button>\n                </td>\n        </tr>\n        )\n    }\n}\n\nexport default OneOffer;\n\n","import React, { Component } from 'react'\r\nimport \"./OffersTable.css\";\r\nimport OneOffer from './OneOffer';\r\n\r\nexport class OffersTable extends Component {\r\n    render() {\r\n        console.log(this.props.offers)\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Seller</td>\r\n                            <td>Card State</td>\r\n                            <td>Initial Price</td>\r\n                            <td>Current Bid</td>\r\n                            <td>End date</td>\r\n                            <td>Your offer</td>\r\n                            <td>Confirm</td>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.offers.map(e => {\r\n                            \r\n\r\n                            return (\r\n                               <OneOffer \r\n                               offer={e}\r\n                               \r\n                               />\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OffersTable\r\n","import React, { Component } from 'react';\nimport \"./OneCard.css\"\n\nexport class CardInfo extends Component {\n\n    //Get all the infos about the card being displayed\n\n    render() {\n        return (\n            <div className=\"info-container\">\n                <div>\n                    <h2 className=\"pokemon-name\">{this.props.pokemon.name}</h2>\n\n                    <div className=\"pokemon-type\">\n                        <h3>{this.props.pokemon.subtypes[0]} {this.props.pokemon.supertype}</h3>\n                        <p>HP{this.props.pokemon.hp}/</p>\n                    </div>\n                </div>\n\n                {this.props.abilities && \n                <div className=\"abilities\">\n                <h3>{this.props.pokemon.abilities.type}</h3>\n                <p>{this.props.pokemon.abilities.name}</p>\n                <p>{this.props.pokemon.abilities.text}</p>\n                </div>}\n                \n\n                <div className=\"attacks\">\n                    <p>{this.props.pokemon.attacks.name} <span>{this.props.pokemon.attacks.damage}</span></p>\n                    <p>{this.props.pokemon.attacks.text}</p>\n                </div>\n\n                <div className=\"pokemon-div-3\">\n\n                    <div className=\"w-r-rc\">\n                        <div>\n                            <p>Weakness</p>\n                            {this.props.pokemon.weaknesses &&\n                                <p>{this.props.pokemon.weaknesses.type} x {this.props.pokemon.weaknesses.value}</p>}\n                        </div>\n                        <div>\n                            <p>Resistance</p>\n                            {this.props.pokemon.resistances &&\n                            <p>{this.props.pokemon.resistances.type} <span>{this.props.pokemon.resistances.value}</span></p>}\n                        </div>\n                        <div>\n                            <p>Retreat Cost</p>\n                            {this.props.pokemon.retreatCost &&\n                            <p>{this.props.pokemon.retreatCost[0]} x {this.props.pokemon.convertedRetreatCost}</p>}\n                        </div>\n                    </div>\n\n                    <div className=\"set\">\n                        <div>\n                            <p>{this.props.pokemon.supertype.series} – {this.props.pokemon.name}</p>\n                            <p>{this.props.pokemon.number}/{this.props.pokemon.set.total} {this.props.pokemon.rarity}</p>\n                        </div>\n                            <img src={this.props.pokemon.set.images.symbol} alt=\"symbol set\" />\n                    </div>\n                </div>\n                \n                <div><p>Illustrator : {this.props.pokemon.artist}</p></div>\n\n            </div>\n        )\n    }\n}\n\nexport default CardInfo\n","import React from 'react';\nimport CardInfo from './CardInfo';\n\nconst OneCardContainer = (props) => {\n    return (\n        <div className=\"container\">\n            <img src={props.pokemon.images.large} alt=\"card\"/>\n            <CardInfo pokemon={props.pokemon}/>\n        </div>\n    )\n}\n\nexport default OneCardContainer\n","import React, { Component } from 'react';\nimport SelectCardsDialog from './SelectCardsDialog';\n\nexport class OneCardToExchange extends Component {\n\n    render() {\n        console.log(this.props)\n        return (\n            <tr key={this.props.offer._id}>\n                <td>{this.props.offer.owner.email}</td>\n                <td>{this.props.offer.cardState}</td>\n                <td>{this.props.pokemon.cardmarket.prices.averageSellPrice}</td>\n                <td><button><SelectCardsDialog /></button></td>\n            </tr>\n        )\n    }\n}\n\nexport default OneCardToExchange\n\n","import React, { Component } from 'react';\nimport OneCardToExchange from './OneCardToExchange'\n\nexport class TableCardsOpenForExchange extends Component {\n    render() {\n        return (\n            <div>\n                <h3>All listings open for exchange</h3>\n                <table>\n                <thead>\n                    <tr>\n                        <td>Owner</td>\n                        <td>Card state</td>\n                        <td>Average Sell Price</td>\n                        <td>What do you wanna exchange ?</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.offers.map(offer => {\n                        return (\n                            <OneCardToExchange offer={offer} pokemon={this.props.pokemon}/>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nexport default TableCardsOpenForExchange\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler'\nimport ActionButtons from \"./ActionButtons\"\n// import CardInfo from \"./CardInfo\"\nimport OffersTable from '../Auctions/OffersTable';\nimport \"./OneCard.css\";\nimport OneCardContainer from './OneCardContainer';\nimport TableCardsOpenForExchange from '../Exchange/TableCardsOpenForExchange';\n\n\nexport class OneCard extends Component {\n    state = {\n        user: {},\n        pokemon : null,\n        isLoggedIn: false,\n        userCards : [],\n        formDisplayed: false,\n        cardsOnSale: [],\n        cardsOpenForExchange: []\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n\n            \n            const apiInfo = await apiHandler.getOneCardFromApi(this.props.match.params.id);\n            this.setState({ pokemon: apiInfo});\n            \n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards });\n\n            const cardsOnSale = await apiHandler.getCardsOnSale(this.state.pokemon.id);\n            this.setState({ cardsOnSale: cardsOnSale });\n\n            const openForExchange = await apiHandler.getAllCardsOneOfApiIdOpenForExchange(this.state.pokemon.id);\n            this.setState({ cardsOpenForExchange: openForExchange})\n        }\n        catch (error) {console.error(error)}\n    }\n\n        // async componentDidUpdate(){\n        //     try {\n                \n        //         // const apiInfo = await apiHandler.getOneCardFromApi(this.props.match.params.id);\n        //         // this.setState({ pokemon: apiInfo});\n                \n        //         const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n        //         this.setState({ userCards: userCards })\n\n        //         const cards = await apiHandler.getCardOnSale(this.state.pokemon.id)\n        //         this.setState({ cardsOnSale: cards })\n                \n    \n        //     }catch(error) {console.log(error)}\n        // }\n    // componentDidUpdate(prevProps, prevState){\n\n\n                               \n    //                 if (this.state.pokemon !== null && this.state.cardsOnSale !== prevState.cardsOnSale)  {\n                         \n    //                     const cards =  apiHandler.getCardOnSale(this.state.pokemon.id)\n\n    //                     if(cards !== this.state.cardsOnSale) { \n    //                         console.log(\"here set state \")\n    //                     }\n\n    //                 }\n\n                    \n                   \n                    \n        \n                \n            \n    //     }\n    \n    \n    addCard = async () => {\n        try {\n            await apiHandler.addCard({pokemonTCGId: this.props.match.params.id});\n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards })\n        } catch (error) {console.error(error)}\n    }\n\n    \n    // handleBid =  async (event) => {\n    //     try {\n            \n    //         const cards = await apiHandler.getCardOnSale(this.state.pokemon.id)\n    //         this.setState({ cardsOnSale: cards })\n    //     } catch (error) {console.error(error)}\n    // }\n    \n    \n    render() {\n\n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n\n            return (\n                <div className=\"OneCard\">\n                    <OneCardContainer pokemon={this.state.pokemon}/>\n                    \n                    <div>\n                    <ActionButtons \n                    addCard={this.addCard} \n                    putCardOnSale={this.putCardOnSale}\n                    showForm={this.displaySaleForm}\n                    >\n                        {this.state}\n                    </ActionButtons>\n\n                    {this.state.cardsOnSale.length > 0 ?\n                        <OffersTable  offers={this.state.cardsOnSale} /> :\n                        <div>No vendor is currently selling this card.</div>\n                    }\n\n                    {this.state.cardsOpenForExchange.length > 0 ? \n                        <TableCardsOpenForExchange offers={this.state.cardsOpenForExchange} pokemon={this.state.pokemon}/> : \n                        <div>No card is open for exchange for now.</div>\n                    }\n\n                     \n\n                  \n                    </div>\n                </div>\n            )\n        }\n\n    }\n\n\nexport default OneCard\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport OneCardItemList from '../CardsList/OneCardItemList';\n\nconst AuctionItem = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.card._id}>\n            <OneCardItemList card={props.card.pokemonTCGId} link={\"/profile/cards/\" + props.card._id}/>\n                <div>\n            <p>Average price: {props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n            <Link to={\"/cards/\" + props.card._id}>Bid Details</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default AuctionItem\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler';\r\nimport BidItem from '../components/Auctions/AuctionItem'\r\n\r\nexport class Bids extends Component {\r\n    \r\n    state = { \r\n        cards: [],\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const cards =  await apiHandler.findCardsOnSale();\r\n        \r\n        const cardPromises = cards.map(card => {\r\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\r\n        })\r\n\r\n        const responses = await Promise.all(cardPromises);\r\n\r\n        const populatedCards = cards.map((card,i) => {\r\n          return {\r\n              ...card,\r\n              pokemonTCGId: responses[i]\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n            cards: populatedCards\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \r\n            <div>\r\n                <h1>ALL THE CARDS ON SALE</h1>\r\n                <div>{this.state.cards.map(e => {\r\n                    return (\r\n                        <BidItem card={e} />\r\n                    )\r\n                })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bids\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormField from \"./FormField\"\n\nexport class SellCardForm extends Component {\n    state = {\n        user: {},\n        card : null,\n        isLoggedIn: false,\n        initialPrice: 0,\n        endDate : \"\",\n        cardState: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n            const cardInfo = await apiHandler.getOneCard(this.props.card._id);\n            this.setState({ card: cardInfo});\n            \n            // const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            // this.setState({ userCards: userCards })\n        }\n        catch (error) {console.error(error)}\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    \n    createBid = async (event) => {\n        event.preventDefault();\n\n        const bid = {\n            item: this.props.card._id,\n            initialPrice: this.state.initialPrice,\n            startDate: Date.now(),\n            endDate: this.state.endDate,\n            status: \"ongoing\"\n        }\n        const bidCreated = await apiHandler.createBid(bid)\n        console.log(bidCreated)\n        \n\n        await apiHandler.updateCard(this.props.card._id, {\n            onSale: true, \n            price: this.state.initialPrice,\n            bid: bidCreated._id,\n            cardState: this.state.cardState\n        })\n\n        // console.log(\"bid created\", bidCreated)\n    }\n    \n    render() {\n        \n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n        else {\n            return (\n                <div className=\"OneCard\">\n                    <div className=\"container\">\n                            <div>\n                                <h2>SaleForm</h2>\n\n                                <FormField label=\"Select the state of the card you're selling\" htmlFor=\"cardState\"> \n                                    <select name=\"cardState\" onChange={this.handleChange}>\n                                        <option value=\"Mint\" selected=\"selected\">Mint</option>\n                                        <option value=\"Near Mint\">Near Mint</option>\n                                        <option value=\"Bad\">Bad</option>\n                                    </select>\n                                </FormField>\n                                <p>Initial Price : {this.props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                <FormField label=\"Choose a price\" htmlFor=\"initialPrice\">\n                                    <input \n                                    type='number'\n                                    onChange={this.handleChange}\n                                    value={this.state.initialPrice}\n                                    name='initialPrice'\n                                    />\n                                </FormField>\n\n                                <FormField label=\"end of the bid\" htmlFor=\"endDate\">\n                                    <input \n                                    type=\"datetime-local\"\n                                    onChange={this.handleChange}\n                                    value={this.state.endTime}\n                                    name=\"endDate\"\n                                    />\n                                </FormField>\n\n                             <button onClick={this.createBid}>Sell</button>\n                            </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default SellCardForm\n","import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler'\n\nexport class BtnExchangeStatus extends Component {\n    state = {\n        openForExchange : this.props.card.openForExchange\n    }\n\n    handleChange = async (event) => {\n        // const isChecked = () => {\n        //     return event.target.checked ? true : false\n        // }\n        // console.log(\"is checked\", isChecked())\n        // this.setState({\n        //     openForExchange: !event.target.checked\n        // })\n        // console.log(this.state.openForExchange)\n        // try {\n\n        //     await apiHandler.updateCard(this.props.card._id, {\n        //         openForExchange: this.state.openForExchange\n        //     })\n\n        //     console.log(this.props.card)\n        // }\n        // catch (error) {\n        //     console.error(error);\n        // }\n    }\n\n\n    handleClick = async () => {\n        try {\n            await apiHandler.updateCard(this.props.card._id, {\n                openForExchange: !this.props.card.openForExchange\n            })\n            console.log(this.props.card)\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        // console.log(this.state.openForExchange)\n        return (\n            <div>\n\n                {!this.props.card.openForExchange && \n                <div>\n                    <p>Not open for exchanges</p>\n                    <button onClick={this.handleClick}>Accept exchanges</button>\n                </div>}\n\n                {this.props.card.openForExchange && \n                <div>\n                    <p>Open for exchanges</p>\n                    <button onClick={this.handleClick}>Refuse exchange</button>\n                </div>}\n                \n                {/* <input type=\"checkbox\" name=\"openForExchange\" defaultChecked={this.state.openForExchange} onClick={this.handleChange}/> */}\n            </div>\n        )\n    }\n}\n\nexport default BtnExchangeStatus\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormSale from '../Forms/FormSale';\nimport OneCardItemList from './OneCardItemList';\nimport BtnExchangeStatus from './BtnExchangeStatus'\n\nexport class CardsList extends Component {\n    state = {\n        cards: null,\n        searchName : \"\"\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllUserCards();\n        // console.log(cards)\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId)\n        })\n        // console.log(cardPromises)\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card, i) => {\n            return {\n                ...card,\n                pokemonTCGId: responses[i]\n            }\n        });\n\n        this.setState({\n            cards: populatedCards\n        })\n            \n    }\n\n    render() {\n        if(this.state.cards === null) return <div>Loading...</div>\n        // console.log(this.state.cards)\n\n        return (\n            <div className=\"CardsList\">\n                <h2>ALL USER'S CARDS</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <div key={card._id}>\n                        <OneCardItemList card={card.pokemonTCGId} link={\"/profile/cards/\" + card._id}>\n                        <button>Sell</button>\n                        <BtnExchangeStatus card={card}/>\n                    </OneCardItemList>\n                    <FormSale card={card}/>\n                    </div>)\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default CardsList\n","import React, { Component } from 'react';\r\nimport apiHandler from '../../api/apiHandler';\r\nimport OneCardItemList from '../CardsList/OneCardItemList';\r\n\r\nexport class UserAuctionItem extends Component {\r\n    // state = { \r\n    //     bidId: this.props.auction._id,\r\n    // }\r\n    \r\n    handleAccept = async () => {\r\n        const card = this.props.auction.item\r\n        const updatedCard = {\r\n            owner: this.props.auction.buyer,\r\n            onSale: false,\r\n            price: null,\r\n        }\r\n        await apiHandler.updateCard(card._id, updatedCard)\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid finished\")\r\n    }\r\n\r\n    handleDelete = async () => {\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid deleted\")\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div key={this.props.auction._id}> \r\n                <OneCardItemList card={this.props.auction.pokemonTCGId}/>\r\n                <div>Current Offer : {this.props.auction.currentBid}</div>\r\n                <button onClick={this.handleAccept}>Accept the offer</button>\r\n                <button onClick={this.handleDelete}>Remove card from sale</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctionItem\r\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler'\r\nimport UserAuctionItem from '../components/Auctions/UserAuctionItem'\r\n\r\nexport class UserAuctions extends Component {\r\n    state = {\r\n        auctions: []\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const myAuctions = await apiHandler.findUserAuctions()\r\n        console.log(myAuctions)\r\n        const promises = myAuctions.map(auction => {\r\n            return ( \r\n                apiHandler.getOneCardFromApi(auction.item.pokemonTCGId)\r\n            )\r\n        })\r\n        const responses = await Promise.all(promises)\r\n        const populatedBids = myAuctions.map((auction, i) => {\r\n            return ( \r\n                {...auction, pokemonTCGId:responses[i]}\r\n            )\r\n        })\r\n        this.setState({\r\n            auctions: populatedBids,\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.state.auctions)\r\n        return (\r\n            \r\n            <div>\r\n                <h1>User Auctions</h1>\r\n                <div>\r\n                    {this.state.auctions.map(e => {\r\n                        return (                           \r\n                            <UserAuctionItem auction={e} />\r\n                        )                      \r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctions\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport OneCardItemList from '../CardsList/OneCardItemList';\nimport { Link } from \"react-router-dom\"\n\n\nexport class OpenForExchange extends Component {\n    state = {\n        cards: null\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllCardsOpenForExchange()\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards\n        })\n        \n    }\n\n    render() {\n        console.log(this.state.cards)\n        if(this.state.cards === null) return (<div>Loading...</div>)\n\n        return (\n            <div>\n                <h2>Cards open for exchanges</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <OneCardItemList card={card.pokemonTCGId}>\n                            <Link to={\"/cards/\" + card.pokemonTCGId.id}>Card details</Link>\n                        </OneCardItemList>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default OpenForExchange\n","import React, { Component } from 'react'\n\nexport class UserCardsOpenForExchange extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default UserCardsOpenForExchange\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NavMain from \"./components/NavMain\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport Profile from \"./pages/Profile\";\r\nimport AllCards from \"./pages/AllCards\";\r\nimport OneCard from \"./components/OneCard/OneCard\"\r\nimport Auctions from \"./pages/Auctions\";\r\nimport CardsList from \"./components/CardsList/CardsList\";\r\nimport FormSale from \"./components/Forms/FormSale\";\r\nimport UserAuctions from \"./pages/UserAuctions\";\r\n// import TestApi from \"./pages/TestApi\";\r\nimport OpenForExchanges from \"./components/Exchange/OpenForExchange\"\r\nimport UserCardsOpenForExchange from \"./components/Exchange/UserCardsOpenForExchange\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavMain />\r\n      <Switch>\r\n        {/* <Route path=\"/test\" component={TestApi} /> */}\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/signin\" component= {Signin} />\r\n        <Route exact path=\"/signup\" component= {Signup} />\r\n        <Route exact path=\"/cards\" component= {AllCards} />\r\n        <Route exact path=\"/cards/:id\" component ={OneCard} />\r\n        <Route exact path=\"/auctions\" component= {Auctions} />\r\n        <Route exact path=\"/exchanges\" component={OpenForExchanges} />\r\n        <ProtectedRoute exact path=\"/profile\" component= {Profile} />\r\n        <ProtectedRoute path=\"/profile/cards\" component={CardsList} />\r\n        <ProtectedRoute exact path=\"/profile/cards/:id\" component={FormSale} />\r\n        <ProtectedRoute path=\"/profile/auctions\" component={UserAuctions} />\r\n        <ProtectedRoute path=\"/profile/exchanges\" component={UserCardsOpenForExchange} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport UserProvider from \"./components/Auth/UserProvider\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}