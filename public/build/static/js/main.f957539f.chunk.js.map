{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Auth/UserProvider.jsx","components/Auth/withUser.jsx","components/NavMain.jsx","pages/Home.jsx","components/Forms/FormSignin.jsx","pages/Signin.jsx","components/Forms/FormSignup.jsx","pages/Signup.jsx","components/ProtectedRoute.jsx","pages/Profile.jsx","components/CardsList/OneCardItemList.jsx","components/Forms/FormField.jsx","components/SearchBar/SearchBar.jsx","components/Loading.jsx","pages/AllCards.jsx","components/Auctions/OneOffer.jsx","components/OneCard/ActionButtons.jsx","components/Auctions/OffersTable.jsx","components/OneCard/CardInfo.jsx","components/OneCard/OneCardContainer.jsx","components/Exchange/SelectCardsBox.jsx","components/Exchange/OneListing.jsx","components/Exchange/TableListings.jsx","components/OneCard/OneCard.jsx","components/Auctions/AuctionItem.jsx","pages/Auctions.jsx","components/Forms/FormSale.jsx","components/CardsList/BtnExchangeStatus.jsx","components/CardsList/CardsList.jsx","components/Auctions/UserAuctionItem.jsx","pages/UserAuctions.jsx","components/Exchange/OpenForExchange.jsx","components/Message.jsx","components/Exchange/ExchangeOfferBox.jsx","components/Exchange/UserCardExchangeItem.jsx","components/Exchange/UserExchanges.jsx","App.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","console","log","apiHandler","signup","userInfo","post","then","res","catch","signin","logout","get","isLoggedIn","getOneCard","id","getItems","getOneCardFromApi","getApiByPage","page","filterApiByName","name","getAllUserCards","addCard","card","updateCard","updatedCard","patch","getUserCollection","type","getOneUserCard","createBid","bid","deleteBid","delete","findCardsOnSale","findUserAuctions","findBid","updatedBids","newBid","getAllUserCardsFromApiCard","apiId","getCardsOnSale","tcgId","getAllCardsOpenForExchange","getAllCardsOneOfApiIdOpenForExchange","createExchange","exchange","getUserCardsOpenForExchange","deleteExchange","UserContext","React","createContext","UserProvider","state","user","isLoading","setUser","setState","removeUser","authValues","this","Provider","value","props","children","Component","withUser","ComponentToPassUserContextTo","Consumer","context","className","exact","to","Fragment","email","onClick","Home","FormSignin","password","handleChange","event","key","target","handleSubmit","preventDefault","onChange","onSubmit","htmlFor","withRouter","Signin","FormSignup","username","history","push","Signup","component","rest","render","Profile","OneCardItemList","src","images","small","alt","height","width","FormField","label","SearchBar","handleNameInputChange","bind","e","Loading","AllCards","cards","loadingPage","prevY","getPokemonsByName","loading","input","a","pokemonTCGId","err","entities","observer","y","boundingClientRect","curPage","getAllPokemons","IntersectionObserver","handleObserverAll","root","rootMargin","threshold","observe","loadingRef","prevProp","prevState","options","handleObserverName","loadingTextCSS","display","style","minHeight","map","ref","margin","length","OneOffer","currentBid","bidId","previousBid","offer","updatedBid","_id","owner","cardState","initialPrice","endDate","OffersTable","offers","CardInfo","pokemon","subtypes","supertype","hp","abilities","text","attacks","damage","weaknesses","resistances","retreatCost","convertedRetreatCost","series","number","set","total","rarity","symbol","artist","OneCardContainer","large","SelectCardsBox","OneListing","exchangeItems","array","deleteCard","newArr","filter","checked","exchangeOffer","seller","sellerItem","buyerItem","cardPromises","Promise","all","responses","populatedCards","i","cardmarket","prices","averageSellPrice","item","TableListings","OneCard","userCards","formDisplayed","cardsOnSale","cardsOpenForExchange","match","params","apiInfo","openForExchange","AuctionItem","link","Bids","SellCardForm","startDate","Date","now","status","bidCreated","onSale","price","cardInfo","disabled","endTime","BtnExchangeStatus","handleClick","CardsList","searchName","FormSale","UserAuctionItem","handleAccept","auction","buyer","handleDelete","UserAuctions","auctions","myAuctions","promises","populatedBids","OpenForExchange","Message","ExchangeOfferBox","items","populatedItems","UserCardExchangeItem","updatedSellerItem","updatedBuyerItem","handleDecline","UserExchanges","exchanges","myExchanges","App","path","Auctions","OpenForExchanges","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f957539f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\r\n});\r\n\r\nfunction errorHandler(error) {\r\n  if (error.response.data) {\r\n    console.log(error.response && error.response.data);\r\n    throw error;\r\n  }\r\n  throw error;\r\n}\r\n\r\nconst apiHandler = {\r\n  service,\r\n\r\n  signup(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signup\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  signin(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signin\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  logout() {\r\n    return service\r\n      .get(\"/api/auth/logout\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  isLoggedIn() {\r\n    return service\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n  \r\n  getOneCard(id) {\r\n    return service \r\n      .get(\"/api/me/cards/\" + id)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  // getItems() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  getItems() {\r\n    return service\r\n    .get(\"/api/pokemonApi/all\")\r\n    .then((res) => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getItems => getAllCards => will get all the cards from the API\r\n  // getAllCards() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n\r\n  getOneCardFromApi(id) {\r\n    return service\r\n    .get(`/api/pokemonApi/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getApiByPage(page) {\r\n    return service \r\n    .get(`/api/pokemonApi/all/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  filterApiByName(name, page) {\r\n    return service\r\n    .get(`/api/pokemonApi/search/${name}/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getAllCards => getAllUserCards removed /api \r\n  getAllUserCards() {\r\n    return service \r\n    .get(\"/api/me/cards\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  addCard(card) {\r\n    return service\r\n    .post(\"/api/me/cards/add\", card)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  updateCard(id, updatedCard) {\r\n    return service\r\n    .patch(`/api/me/cards/${id}/edit`, updatedCard)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  //User Interaction\r\n  //old findUserCollection => getUserCollection removed /api\r\n  getUserCollection(type) {\r\n    return service \r\n    .get(`/api/me/collection/${type}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getOneUserCard(id){\r\n    return service\r\n    .get(\"/api/me/cards/\" + id)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  // Bids \r\n  //create a new bid\r\n  createBid(bid){\r\n    return service\r\n    .post('/api/bids/create', bid)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteBid(bid){\r\n    return service\r\n      .delete(`/api/bids/${bid}`)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  //?? delete this i think\r\n  findCardsOnSale(){\r\n    return service\r\n    .get(`/api/bids`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  findUserAuctions(){\r\n    return service\r\n      .get(\"/api/profile/auctions\")\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n  \r\n  findBid(id){\r\n    return service\r\n    .get(`/api/bids/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n},\r\n\r\n  updatedBids(id, newBid){\r\n      return service\r\n      .patch(`/api/bids/${id}`, newBid)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  getAllUserCardsFromApiCard(apiId) {\r\n    return service\r\n    .get(\"/api/me/cards/all/\" + apiId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //Get all the cards that are on sale\r\n  getCardsOnSale(tcgId){\r\n    return service\r\n    .get(\"/api/cards/bids/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOpenForExchange() {\r\n    return service \r\n    .get(\"/api/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOneOfApiIdOpenForExchange(tcgId) {\r\n    return service \r\n    .get(\"/api/exchanges/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  \r\n  createExchange(exchange) {\r\n    return service \r\n    .post(\"/api//profile/exchanges/create\", exchange)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getUserCardsOpenForExchange() {\r\n    return service \r\n    .get(\"/api/profile/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteExchange(id) {\r\n    return service\r\n    .delete(`/api/profile/exchanges/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  }\r\n  \r\n}\r\n\r\nexport default apiHandler;\r\n","import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n","import React, { Component } from \"react\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    apiHandler\r\n      .isLoggedIn()\r\n      .then((data) => {\r\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\r\n      });\r\n  }\r\n\r\n  setUser = (user) => {\r\n    this.setState({ user, isLoggedIn: true });\r\n  };\r\n\r\n  removeUser = () => {\r\n    this.setState({ user: null, isLoggedIn: false });\r\n  };\r\n\r\n  render() {\r\n    //  Setup all the values/functions you want to expose to anybody reading\r\n    // from the AuthContext.\r\n    const authValues = {\r\n      user: this.state.user,\r\n      setUser: this.setUser,\r\n      removeUser: this.removeUser,\r\n      isLoggedIn: this.state.isLoggedIn,\r\n      isLoading: this.state.isLoading,\r\n    };\r\n\r\n    return (\r\n      <UserContext.Provider value={authValues}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProvider;\r\n","import React from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n// This is what we call a HOC (Higher Order Component).\r\n// It takes a component as a parameter and it returns a component.\r\n// This technique can be used to abstract some logic in order to pass\r\n// some data down as props to the component sent as parameter.\r\n\r\n// The use case of this one is to make it easy to access the user context to\r\n// any component in our app.\r\n\r\n/* ******************************************************** */\r\n\r\n//  How to use:  =>\r\n// YourComponent.jsx\r\n// import React from \"react\"\r\n// function or class YourComponent()\r\n//\r\n// ... your implementation.\r\n//\r\n// export default withUser(YourComponent)\r\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\r\n\r\n// This component is not exported as default, so you have to import it\r\n// this way :\r\n// import { withUser } from \"../relative/path/to/this/file\"\r\n\r\nexport const withUser = (ComponentToPassUserContextTo) => {\r\n  return function (props) {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {(context) => (\r\n          <ComponentToPassUserContextTo {...props} context={context} />\r\n        )}\r\n      </UserContext.Consumer>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withUser } from \"../components/Auth/withUser\";\r\nimport apiHandler from \"../api/apiHandler\";\r\n\r\nimport \"../styles/NavMain.css\";\r\n\r\nconst NavMain = (props) => {\r\n  const { context } = props;\r\n\r\n  function handleLogout() {\r\n    apiHandler\r\n      .logout()\r\n      .then(() => {\r\n        context.removeUser();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <nav className=\"NavMain\">\r\n      <NavLink exact to=\"/\">\r\n        <h3 className=\"logo\">App name</h3>\r\n      </NavLink>\r\n      <ul className=\"nav-list\">\r\n        {context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/profile/cards\">User Cards</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/auctions\">Auctions</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/exchanges\">User Exchanges</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile\">\r\n                {context.user && context.user.email}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <p onClick={handleLogout}>Logout</p>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n        {!context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/signin\">Log in</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/signup\">Create account</NavLink>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withUser(NavMain);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>Home</h1>  \r\n          <p><Link to=\"/cards\">See all cards</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { withUser } from \"../Auth/withUser\";\r\n\r\nclass FormSignin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const key = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signin(this.state)\r\n      .then((data) => {\r\n        this.props.context.setUser(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Display error message here, if you set the state\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n        <h2>Signin</h2>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignin));\r\n","import React from \"react\";\r\nimport FormSignin from \"../components/Forms/FormSignin\";\r\n\r\nconst Signin = (props) => {\r\n  return <FormSignin />;\r\n};\r\n\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withUser } from \"../Auth/withUser\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\n\r\nclass FormSignup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    const key = event.target.name;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signup(this.state)\r\n      .then(() => {\r\n        this.props.history.push(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Signup</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.username}\r\n          type=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.email}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.password}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignup));\r\n","import React from \"react\";\r\nimport FormSignup from \"../components/Forms/FormSignup\";\r\n\r\nconst Signup = (props) => {\r\n  return <FormSignup />;\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { withUser } from \"./Auth/withUser\";\r\n\r\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\r\n  if (context.isLoading) {\r\n    return null;\r\n  } else if (context.isLoggedIn) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  } else {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n};\r\n\r\nexport default withUser(ProtectedRoute);\r\n","import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Protected profile</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\n\nconst OneCardItemList = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.key}>\n        <img src={props.card.images.small} alt=\"\" height=\"400px\" width=\"350px\"/>\n        <div>{props.card.name}</div>\n        {props.children}\n        </div>\n    )\n}\n\nexport default OneCardItemList\n","import React from 'react'\n\nconst FormField = (props) => {\n    return (\n        <div className=\"FormField\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormField\n","import React, { Component } from 'react';\nimport FormField from '../Forms/FormField';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n    }\n\n    handleNameInputChange(e) {\n        this.props.handleNameInputChange(e.target.value)\n    };\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <form onSubmit={this.props.onSubmit}>\n                    <FormField>\n                        <input\n                        type=\"text\"\n                        value={this.props.name}\n                        onChange={this.handleNameInputChange}\n                        name=\"name\"\n                        />\n                    </FormField>\n                    <button type='submit'>Search</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar\n","import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div>\n            <p>Wait a bit... we need to catch 'em all ! </p>\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { Component } from 'react';\r\nimport '../pages/AllCards.css'\r\nimport OneCardItemList from '../components/CardsList/OneCardItemList'\r\nimport apiHandler from '../api/apiHandler';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../components/Loading';\r\n\r\nexport class AllCards extends Component {\r\n    state = {\r\n        cards: [],\r\n        loadingPage: false,\r\n        page: 1,\r\n        prevY: 0,\r\n        name: \"\"\r\n    }\r\n\r\n    getAllPokemons(page){\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        apiHandler.getApiByPage(page)\r\n        .then((res) => {\r\n            this.setState({cards: [...this.state.cards, ...res.data]});\r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getPokemonsByName = (name, page) => {\r\n        this.setState({ loading: true });\r\n        apiHandler.filterApiByName(name, page)\r\n        .then((res) => {\r\n            this.setState({\r\n                cards: [...this.state.cards, ...res.data],\r\n                loadingPage: true\r\n            });\r\n        })\r\n        .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n\r\n    handleObserverAll(entities, observer){\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y){\r\n           \r\n            const curPage = this.state.page + 1;\r\n            this.getAllPokemons(curPage);\r\n            this.setState({page: curPage})\r\n        }\r\n        this.setState({prevY: y})\r\n    }\r\n\r\n\r\n    handleObserverName(entities, observer){\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y){\r\n           \r\n            const curPage = this.state.page + 1;\r\n            this.getPokemonsByName(this.state.name, curPage);\r\n            this.setState({page: curPage})\r\n        }\r\n        this.setState({prevY: y})\r\n    }\r\n\r\n    handleNameInputChange = (input) => {\r\n        this.setState({\r\n            name: input\r\n        })\r\n    }\r\n\r\n    addCard = async (apiId) => {\r\n        try {\r\n            await apiHandler.addCard({pokemonTCGId: apiId});\r\n        } catch (error) {console.error(error)}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllPokemons(this.state.page);\r\n        var options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1.0\r\n        }\r\n\r\n        this.observer = new IntersectionObserver(\r\n            this.handleObserverAll.bind(this),\r\n            options\r\n        );\r\n\r\n        this.observer.observe(this.loadingRef)\r\n    }\r\n\r\n    async componentDidUpdate(prevProp, prevState) {\r\n        if(this.state.name !== prevState.name) {\r\n            // console.log(this.state.name)\r\n            this.getPokemonsByName(this.state.name, this.state.page);\r\n            console.log(this.state.cards)\r\n\r\n            var options = {\r\n                root: null,\r\n                rootMargin: \"0px\",\r\n                threshold: 1.0\r\n            }\r\n    \r\n            this.observer = new IntersectionObserver(\r\n                this.handleObserverName.bind(this),\r\n                options\r\n            );\r\n    \r\n            this.observer.observe(this.loadingRef)\r\n        }\r\n\r\n        if(this.state.name !== prevState.name && this.state.name === \"\") {\r\n            this.getAllPokemons(this.state.page)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const loadingCSS = {\r\n            height: \"100px\",\r\n            margin: \"30px\"\r\n          };\r\n\r\n        const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Hello</h1>\r\n                <SearchBar \r\n                name={this.state.name}\r\n                handleNameInputChange={this.handleNameInputChange}\r\n                />\r\n\r\n                {this.state.loadingPage && \r\n                <Loading />}\r\n                \r\n                <div style={{ minHeight: \"800px\", display: \"flex\", \"flexWrap\": \"wrap\" }}>\r\n                    {this.state.cards.map(card => (\r\n                        <OneCardItemList card={card}>\r\n                            <div>\r\n                                <Link to={\"/cards/\" + card.id}>Card details</Link>\r\n                                <button onClick={() => {this.addCard(card.id)}}>Add Card</button>\r\n                            </div>\r\n                        </OneCardItemList>\r\n\r\n                    ))}\r\n                </div>\r\n                \r\n                <div\r\n                ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                style={loadingCSS}\r\n                >\r\n                    {this.state.cards.length > 0 && \r\n                    <Loading style={loadingTextCSS}/>}\r\n\r\n                {/* <span style={loadingTextCSS}>Loading...</span> */}\r\n                </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllCards\r\n\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\n\nexport class OneOffer extends Component {\n\n    state = {\n        currentBid: 0,\n        bidId: \"\",\n        previousBid: this.props.offer.bid.currentBid,\n        bid: {},\n    }\n\n    async componentDidMount(){\n        const bid = await apiHandler.findBid( this.props.offer.bid._id)\n        this.setState({\n            bid: bid\n        })\n        console.log(\"Bid called in oneOffer \",  this.state.bid)\n    }\n\n\n    handleChange = (event) => {\n        const key = event.target.name\n        const value = event.target.value\n        this.setState({\n            [key]: value, \n        })\n    }\n\n    handleSubmit = (id) => {\n        if(this.state.currentBid < this.state.previousBid) {\n            console.log(\"current bid is too low\")\n        } else {\n            const updatedBid = {currentBid: this.state.currentBid}\n            apiHandler.updatedBids(id, updatedBid)\n            this.setState({\n                bid: updatedBid\n            })\n           \n        }\n        \n    }\n\n    \n\n    render() {\n        return (\n            <tr key={this.state.bid._id}>\n            <td>{this.props.offer.owner.email}</td>\n            <td>{this.props.offer.cardState}</td>\n            <td>{this.props.offer.bid.initialPrice} $</td>\n            <td>{this.state.bid.currentBid ? `${this.state.bid.currentBid} $` : \"Be the first to Bid\"}</td>\n            <td>{this.props.offer.bid.endDate}</td>\n            <td>\n                <input \n                    type=\"number\" \n                    name=\"currentBid\" \n                    value={this.state.currentBid}                                          \n                    onChange={this.handleChange} \n                    // min={this.state.bid.bid.currentBid}\n            />\n            </td>\n            <td>\n                <button  onClick={() => this.handleSubmit(this.state.bid._id)} >\n                    Place Bid\n                    </button>\n                </td>\n        </tr>\n        )\n    }\n}\n\nexport default OneOffer;\n\n","import React, { Component } from 'react';\n\nclass OneCardActions extends Component {\n\n    render() {\n        const { isLoggedIn, userCards } = this.props.children;\n\n        return (\n            <div>\n                <div>\n                    \n                    {isLoggedIn && \n                    userCards.length === 0 && \n                    <button onClick={this.props.addCard}>Add to my collection</button> } {/* user indicates that they own this card */}\n\n                    {isLoggedIn && \n                    userCards.length > 0 && \n                    <div>\n                        <p>You have {userCards.length} {userCards.length === 1 ? \"version\" : \"versions\"} of this card.</p>\n                        <button onClick={this.props.addCard}>Add another to my collection</button>\n                    </div>}\n\n                    {/* {isLoggedIn &&\n                    userCards.length > 0 && \n                    <button onClick={() => this.props.sellCard(userCards._id)}>Sell</button>} user wants to sell this card */}\n\n                    {isLoggedIn && userCards.map(card => {\n                        return(\n                            <div key={card._id}>\n                                \n                            </div>\n                        )\n                    })}\n\n                    {isLoggedIn && \n                    <div>All the current offers : </div>}\n                    \n                    {!isLoggedIn && \n                    <div>See offers</div>} {/* user seeks to make a bid or exchange to get this card */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OneCardActions\n\n","import React, { Component } from 'react'\r\nimport \"./OffersTable.css\";\r\nimport OneOffer from './OneOffer';\r\n\r\nexport class OffersTable extends Component {\r\n    render() {\r\n        console.log(this.props.offers)\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Seller</td>\r\n                            <td>Card State</td>\r\n                            <td>Initial Price</td>\r\n                            <td>Current Bid</td>\r\n                            <td>End date</td>\r\n                            <td>Your offer</td>\r\n                            <td>Confirm</td>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.offers.map(e => {\r\n                            \r\n\r\n                            return (\r\n                               <OneOffer \r\n                               offer={e}\r\n                               \r\n                               />\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OffersTable\r\n","import React, { Component } from 'react';\nimport \"./OneCard.css\"\n\nexport class CardInfo extends Component {\n\n    //Get all the infos about the card being displayed\n\n    render() {\n        return (\n            <div className=\"info-container\">\n                <div>\n                    <h2 className=\"pokemon-name\">{this.props.pokemon.name}</h2>\n\n                    <div className=\"pokemon-type\">\n                        <h3>{this.props.pokemon.subtypes[0]} {this.props.pokemon.supertype}</h3>\n                        <p>HP{this.props.pokemon.hp}/</p>\n                    </div>\n                </div>\n\n                {this.props.abilities && \n                <div className=\"abilities\">\n                <h3>{this.props.pokemon.abilities.type}</h3>\n                <p>{this.props.pokemon.abilities.name}</p>\n                <p>{this.props.pokemon.abilities.text}</p>\n                </div>}\n                \n\n                <div className=\"attacks\">\n                    <p>{this.props.pokemon.attacks.name} <span>{this.props.pokemon.attacks.damage}</span></p>\n                    <p>{this.props.pokemon.attacks.text}</p>\n                </div>\n\n                <div className=\"pokemon-div-3\">\n\n                    <div className=\"w-r-rc\">\n                        <div>\n                            <p>Weakness</p>\n                            {this.props.pokemon.weaknesses &&\n                                <p>{this.props.pokemon.weaknesses.type} x {this.props.pokemon.weaknesses.value}</p>}\n                        </div>\n                        <div>\n                            <p>Resistance</p>\n                            {this.props.pokemon.resistances &&\n                            <p>{this.props.pokemon.resistances.type} <span>{this.props.pokemon.resistances.value}</span></p>}\n                        </div>\n                        <div>\n                            <p>Retreat Cost</p>\n                            {this.props.pokemon.retreatCost &&\n                            <p>{this.props.pokemon.retreatCost[0]} x {this.props.pokemon.convertedRetreatCost}</p>}\n                        </div>\n                    </div>\n\n                    <div className=\"set\">\n                        <div>\n                            <p>{this.props.pokemon.supertype.series} – {this.props.pokemon.name}</p>\n                            <p>{this.props.pokemon.number}/{this.props.pokemon.set.total} {this.props.pokemon.rarity}</p>\n                        </div>\n                            <img src={this.props.pokemon.set.images.symbol} alt=\"symbol set\" />\n                    </div>\n                </div>\n                \n                <div><p>Illustrator : {this.props.pokemon.artist}</p></div>\n\n            </div>\n        )\n    }\n}\n\nexport default CardInfo\n","import React from 'react';\nimport CardInfo from './CardInfo';\n\nconst OneCardContainer = (props) => {\n    return (\n        <div className=\"container\">\n            <img src={props.pokemon.images.large} alt=\"card\"/>\n            <CardInfo pokemon={props.pokemon}/>\n        </div>\n    )\n}\n\nexport default OneCardContainer\n\n\n","import React, { Component } from 'react';\n\nexport class SelectCardsBox extends Component {\n\n    handleChange = (event) => {\n        this.props.handleChange(event)\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <p>Select card(s)</p>\n                {this.props.cards.map(card => {\n                    return(\n                        <div key={card._id}>\n                            <input type=\"checkbox\" id={card._id} onChange={this.props.handleChange} />\n                            <label htmlFor=\"items\">{card.pokemonTCGId.name} – {card._id}</label>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default SelectCardsBox\n","import React, { Component } from 'react';\nimport SelectCardsBox from './SelectCardsBox';\nimport apiHandler from '../../api/apiHandler';\n\nexport class OneListing extends Component {\n\n    state = {\n        loading: true,\n        cards: [],\n        exchangeItems: []\n    }\n\n    addCard = (card) => {\n        let array = this.state.exchangeItems;\n        array.push(card)\n        this.setState({\n            exchangeItems : array\n        })\n    }\n\n    deleteCard = (card) => {\n        let array = [...this.state.exchangeItems];\n        let newArr = array.filter(e => e !== card);\n        this.setState({\n            exchangeItems : newArr\n        })\n    }\n\n    handleChange = (event) => {\n        if(event.target.checked) {\n            this.addCard(event.target.id)\n        } \n        else {\n            this.deleteCard(event.target.id)\n        }\n    }\n\n    handleSubmit = async () => {\n        const exchangeOffer = {\n            seller : this.props.offer.owner._id,\n            sellerItem : this.props.offer._id,\n            buyerItem : this.state.exchangeItems\n        }\n        try {\n            await apiHandler.createExchange(exchangeOffer)\n        }\n        catch (error) {console.error(error)}\n    }\n\n    async componentDidMount() {\n        const cards =  await apiHandler.getAllUserCards();\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n        const responses = await Promise.all(cardPromises);\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards, \n            loading: false\n        })\n    }\n\n    render() {\n        return (\n            <tr key={this.props.offer._id}>\n                <td>{this.props.offer.owner.email}</td>\n                <td>{this.props.offer.cardState}</td>\n                <td>{this.props.pokemon.cardmarket.prices.averageSellPrice}</td>\n                <td>\n                    <div>\n                    {(this.state.loading) && \n                    <div><p>Catching all your pokemons... plz hooold</p></div>\n                    }\n                    {(!this.state.loading) && \n                    <SelectCardsBox \n                    cards={this.state.cards}\n                    exchangeItems={this.state.exchangeItems}\n                    handleChange={this.handleChange}\n                    />\n                    }\n                    </div>\n                </td>\n                <td>\n                    <ul>\n                        {this.state.exchangeItems.map(item => {\n                            return (\n                                <li>{item}</li>\n                            )\n                        }) }\n                    </ul>\n                </td>\n                <td>\n                    <button onClick={this.handleSubmit}>Confirm offer</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default OneListing\n\n","import React, { Component } from 'react';\nimport OneListing from './OneListing'\n\nexport class TableListings extends Component {\n\n    render() {\n        return (\n            <div>\n                <h3>All listings open for exchange</h3>\n                <table>\n                <thead>\n                    <tr>\n                        <td>Owner</td>\n                        <td>Card state</td>\n                        <td>Average Sell Price</td>\n                        <td>What do you wanna exchange ?</td>\n                        <td>Your current offer</td>\n                        <td>Confirm offer</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.offers.map(offer => {\n                        return (\n                            <OneListing offer={offer} pokemon={this.props.pokemon}/>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nexport default TableListings\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler'\nimport ActionButtons from \"./ActionButtons\"\n// import CardInfo from \"./CardInfo\"\nimport OffersTable from '../Auctions/OffersTable';\nimport \"./OneCard.css\";\nimport OneCardContainer from './OneCardContainer';\nimport TableListings from '../Exchange/TableListings';\n\n\nexport class OneCard extends Component {\n    state = {\n        user: {},\n        pokemon : null,\n        isLoggedIn: false,\n        userCards : [],\n        formDisplayed: false,\n        cardsOnSale: [],\n        cardsOpenForExchange: []\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n\n            \n            const apiInfo = await apiHandler.getOneCardFromApi(this.props.match.params.id);\n            this.setState({ pokemon: apiInfo});\n            \n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards });\n\n            const cardsOnSale = await apiHandler.getCardsOnSale(this.state.pokemon.id);\n            this.setState({ cardsOnSale: cardsOnSale });\n\n            const openForExchange = await apiHandler.getAllCardsOneOfApiIdOpenForExchange(this.state.pokemon.id);\n            this.setState({ cardsOpenForExchange: openForExchange})\n        }\n        catch (error) {console.error(error)}\n    }\n\n        // async componentDidUpdate(){\n        //     try {\n                \n        //         // const apiInfo = await apiHandler.getOneCardFromApi(this.props.match.params.id);\n        //         // this.setState({ pokemon: apiInfo});\n                \n        //         const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n        //         this.setState({ userCards: userCards })\n\n        //         const cards = await apiHandler.getCardOnSale(this.state.pokemon.id)\n        //         this.setState({ cardsOnSale: cards })\n                \n    \n        //     }catch(error) {console.log(error)}\n        // }\n    // componentDidUpdate(prevProps, prevState){\n\n\n\n    \n    addCard = async () => {\n        try {\n            await apiHandler.addCard({pokemonTCGId: this.props.match.params.id});\n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards })\n        } catch (error) {console.error(error)}\n    }\n\n    render() {\n\n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n\n            return (\n                <div className=\"OneCard\">\n                    <OneCardContainer pokemon={this.state.pokemon}/>\n                    \n                    <div>\n                    {/* <ActionButtons \n                    addCard={this.addCard} \n                    putCardOnSale={this.putCardOnSale}\n                    showForm={this.displaySaleForm}\n                    >\n                        {this.state}\n                    </ActionButtons> */}\n\n                    {this.state.cardsOnSale.length > 0 ?\n                        <OffersTable  offers={this.state.cardsOnSale} /> :\n                        <div>No vendor is currently selling this card.</div>\n                    }\n\n                    {this.state.cardsOpenForExchange.length > 0 ? \n                        <TableListings offers={this.state.cardsOpenForExchange} pokemon={this.state.pokemon}/> : \n                        <div>No card is open for exchange for now.</div>\n                    }\n\n                     \n\n                  \n                    </div>\n                </div>\n            )\n        }\n\n    }\n\n\nexport default OneCard\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport OneCardItemList from '../CardsList/OneCardItemList';\n\nconst AuctionItem = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.card._id}>\n            <OneCardItemList card={props.card.pokemonTCGId} link={\"/profile/cards/\" + props.card._id}/>\n                <div>\n            <p>Average price: {props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n            <Link to={\"/cards/\" + props.card._id}>Bid Details</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default AuctionItem\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler';\r\nimport BidItem from '../components/Auctions/AuctionItem'\r\n\r\nexport class Bids extends Component {\r\n    \r\n    state = { \r\n        cards: [],\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const cards =  await apiHandler.findCardsOnSale();\r\n        \r\n        const cardPromises = cards.map(card => {\r\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\r\n        })\r\n\r\n        const responses = await Promise.all(cardPromises);\r\n\r\n        const populatedCards = cards.map((card,i) => {\r\n          return {\r\n              ...card,\r\n              pokemonTCGId: responses[i]\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n            cards: populatedCards\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \r\n            <div>\r\n                <h1>ALL THE CARDS ON SALE</h1>\r\n                <div>{this.state.cards.map(e => {\r\n                    return (\r\n                        <BidItem card={e} />\r\n                    )\r\n                })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bids\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormField from \"./FormField\"\n\nexport class SellCardForm extends Component {\n    state = {\n        user: {},\n        card : null,\n        isLoggedIn: false,\n        initialPrice: 0,\n        endDate : \"\",\n        cardState: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n            const cardInfo = await apiHandler.getOneCard(this.props.card._id);\n            this.setState({ card: cardInfo});\n            \n            // const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            // this.setState({ userCards: userCards })\n        }\n        catch (error) {console.error(error)}\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    \n    createBid = async (event) => {\n        event.preventDefault();\n\n        const bid = {\n            item: this.props.card._id,\n            initialPrice: this.state.initialPrice,\n            startDate: Date.now(),\n            endDate: this.state.endDate,\n            status: \"ongoing\"\n        }\n        const bidCreated = await apiHandler.createBid(bid)\n        console.log(bidCreated)\n        \n\n        await apiHandler.updateCard(this.props.card._id, {\n            onSale: true, \n            price: this.state.initialPrice,\n            bid: bidCreated._id,\n            cardState: this.state.cardState\n        })\n\n        // console.log(\"bid created\", bidCreated)\n    }\n    \n    render() {\n        \n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n        else {\n            return (\n                <div className=\"OneCard\">\n                    <div className=\"container\">\n                            <div>\n                                <h2>SaleForm</h2>\n\n                                <FormField label=\"Select the state of the card you're selling\" htmlFor=\"cardState\"> \n                                    <select name=\"cardState\" onChange={this.handleChange}>\n                                        <option disabled>Select</option>\n                                        <option value=\"Mint\">Mint</option>\n                                        <option value=\"Near Mint\">Near Mint</option>\n                                        <option value=\"Bad\">Bad</option>\n                                    </select>\n                                </FormField>\n                                <p>Initial Price : {this.props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                <FormField label=\"Choose a price\" htmlFor=\"initialPrice\">\n                                    <input \n                                    type='number'\n                                    onChange={this.handleChange}\n                                    value={this.state.initialPrice}\n                                    name='initialPrice'\n                                    />\n                                </FormField>\n\n                                <FormField label=\"end of the bid\" htmlFor=\"endDate\">\n                                    <input \n                                    type=\"datetime-local\"\n                                    onChange={this.handleChange}\n                                    value={this.state.endTime}\n                                    name=\"endDate\"\n                                    />\n                                </FormField>\n\n                             <button onClick={this.createBid}>Sell</button>\n                            </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default SellCardForm\n","import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler'\n\nexport class BtnExchangeStatus extends Component {\n    state = {\n        openForExchange : this.props.card.openForExchange\n    }\n\n    handleClick = async () => {\n        try {\n            await apiHandler.updateCard(this.props.card._id, {\n                openForExchange: !this.props.card.openForExchange\n            })\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                {!this.props.card.openForExchange && \n                <div>\n                    <p>Not open for exchanges</p>\n                    <button onClick={this.handleClick}>Accept exchanges</button>\n                </div>}\n\n                {this.props.card.openForExchange && \n                <div>\n                    <p>Open for exchanges</p>\n                    <button onClick={this.handleClick}>Refuse exchange</button>\n                </div>}\n                \n                {/* <input type=\"checkbox\" name=\"openForExchange\" defaultChecked={this.state.openForExchange} onClick={this.handleChange}/> */}\n            </div>\n        )\n    }\n}\n\nexport default BtnExchangeStatus\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormSale from '../Forms/FormSale';\nimport OneCardItemList from './OneCardItemList';\nimport BtnExchangeStatus from './BtnExchangeStatus'\n\nexport class CardsList extends Component {\n    state = {\n        cards: null,\n        searchName : \"\"\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllUserCards();\n        // console.log(cards)\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId)\n        })\n        // console.log(cardPromises)\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card, i) => {\n            return {\n                ...card,\n                pokemonTCGId: responses[i]\n            }\n        });\n\n        this.setState({\n            cards: populatedCards\n        })\n            \n    }\n\n    render() {\n        if(this.state.cards === null) return <div>Loading...</div>\n        // console.log(this.state.cards)\n\n        return (\n            <div className=\"CardsList\">\n                <h2>ALL USER'S CARDS</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <div key={card._id}>\n                        <OneCardItemList card={card.pokemonTCGId} link={\"/profile/cards/\" + card._id}>\n                        <button>Sell</button>\n                        <BtnExchangeStatus card={card}/>\n                    </OneCardItemList>\n                    <FormSale card={card}/>\n                    </div>)\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default CardsList\n","import React, { Component } from 'react';\r\nimport apiHandler from '../../api/apiHandler';\r\nimport OneCardItemList from '../CardsList/OneCardItemList';\r\n\r\nexport class UserAuctionItem extends Component {\r\n    // state = { \r\n    //     bidId: this.props.auction._id,\r\n    // }\r\n    \r\n    handleAccept = async () => {\r\n        const card = this.props.auction.item\r\n        const updatedCard = {\r\n            owner: this.props.auction.buyer,\r\n            onSale: false,\r\n            price: null,\r\n        }\r\n        await apiHandler.updateCard(card._id, updatedCard)\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid finished\")\r\n    }\r\n\r\n    handleDelete = async () => {\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid deleted\")\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div key={this.props.auction._id}> \r\n                <OneCardItemList card={this.props.auction.pokemonTCGId}/>\r\n                <div>Current Offer : {this.props.auction.currentBid}</div>\r\n                <button onClick={this.handleAccept}>Accept the offer</button>\r\n                <button onClick={this.handleDelete}>Remove card from sale</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctionItem\r\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler'\r\nimport UserAuctionItem from '../components/Auctions/UserAuctionItem'\r\n\r\nexport class UserAuctions extends Component {\r\n    state = {\r\n        auctions: []\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const myAuctions = await apiHandler.findUserAuctions()\r\n        const promises = myAuctions.map(auction => {\r\n            return ( \r\n                apiHandler.getOneCardFromApi(auction.item.pokemonTCGId)\r\n            )\r\n        })\r\n        const responses = await Promise.all(promises)\r\n        const populatedBids = myAuctions.map((auction, i) => {\r\n            return ( \r\n                {...auction, pokemonTCGId:responses[i]}\r\n            )\r\n        })\r\n        this.setState({\r\n            auctions: populatedBids,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <h1>User Auctions</h1>\r\n                <div>\r\n                    {this.state.auctions.map(e => {\r\n                        return (                           \r\n                            <UserAuctionItem auction={e} />\r\n                        )                      \r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctions\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport OneCardItemList from '../CardsList/OneCardItemList';\nimport { Link } from \"react-router-dom\"\n\n\nexport class OpenForExchange extends Component {\n    state = {\n        cards: null\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllCardsOpenForExchange()\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards\n        })\n        \n    }\n\n    render() {\n        console.log(this.state.cards)\n        if(this.state.cards === null) return (<div>Loading...</div>)\n\n        return (\n            <div>\n                <h2>Cards open for exchanges</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <OneCardItemList card={card.pokemonTCGId} key={card._id}>\n                            <Link to={\"/cards/\" + card.pokemonTCGId.id}>Card details</Link>\n                        </OneCardItemList>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default OpenForExchange\n","import React from 'react'\n\nconst Message = (props) => {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Message\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport Loading from '../Loading';\n\nexport class ExchangeOfferBox extends Component {\n    state = {\n        loading: true,\n        items: null\n    }\n\n    async componentDidMount() {\n        try {\n            const promises = this.props.items.map(item => {\n                return (\n                    apiHandler.getOneCardFromApi(item.pokemonTCGId)\n                )\n            })\n\n            const responses = await Promise.all(promises)\n\n            const populatedItems = this.props.items.map((item, i) => {\n                return (\n                    {...item, pokemonTCGId: responses[i]}\n                )\n            })\n\n            this.setState({\n                items: populatedItems, \n                loading: false\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n\n    render() {\n        if(this.state.loading === true) return <Loading></Loading>\n        return (\n            <div>\n                <ul>\n                    {this.state.items.map(item => {\n                        return (\n                            <li key={item._id + 3}>\n                                <div> \n                                    <img src={item.pokemonTCGId.images.small} alt={\"photo \" + item.pokemonTCGId.name}/>\n                                <p>{item.pokemonTCGId.name}</p>\n                                <p>Average sell price : {item.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                </div>\n                            </li>\n                            \n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ExchangeOfferBox\n","import React from 'react';\nimport OneCardItemList from '../CardsList/OneCardItemList';\nimport ExchangeOfferBox from './ExchangeOfferBox';\nimport apiHandler from '../../api/apiHandler';\n\nclass UserCardExchangeItem extends React.Component {\n\n    handleAccept = async () => {\n        try {\n            // update seller items\n            const updatedSellerItem = {\n                owner: this.props.exchange.buyer,\n                openForExchange: false\n            }\n            await apiHandler.updateCard(this.props.exchange.sellerItem._id, updatedSellerItem);\n\n            // update buyer items\n            const updatedBuyerItem = {\n                owner: this.props.exchange.seller,\n                openForExchange: false\n            }\n            const promises = this.props.exchange.buyerItem.map(item => {\n                return (\n                    apiHandler.updateCard(item._id, updatedBuyerItem)\n                )\n            })\n            await Promise.all(promises)\n\n            await apiHandler.deleteExchange(this.props.exchange._id)\n\n        }\n        catch (error) { console.error(error)}\n    }\n\n    handleDecline = async () => {\n        await apiHandler.deleteExchange(this.props.exchange._id)\n    }\n\n    render () {\n        console.log(this.props.exchange)\n        return (\n            <div key={this.props.exchange.sellerItem._id +1}>\n                <OneCardItemList \n                card={this.props.exchange.pokemonTCGId}\n                />\n                <div>\n                    <p>Initial price of my card : {this.props.exchange.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                </div>\n                <ExchangeOfferBox items={this.props.exchange.buyerItem}/>\n                <div>\n                    <button onClick={this.handleAccept}>Accept Offer</button>\n                    <button onClick={this.handleDecline}>Decline Offer</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserCardExchangeItem\n","import React, { Component } from 'react';\nimport Loading from '../Loading';\nimport apiHandler from '../../api/apiHandler';\nimport Message from '../Message';\nimport UserCardExchangeItem from './UserCardExchangeItem';\n\nexport class UserExchanges extends Component {\n\n    state = {\n        exchanges: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const myExchanges = await apiHandler.getUserCardsOpenForExchange();\n            const promises = myExchanges.map(exchange => {\n                return ( \n                    apiHandler.getOneCardFromApi(exchange.sellerItem.pokemonTCGId)\n                )\n            })\n            const responses = await Promise.all(promises)\n            const populatedCards = myExchanges.map((exchange, i) => {\n                return ( \n                    {...exchange, pokemonTCGId:responses[i]}\n                )\n            })\n\n            this.setState({\n                exchanges: populatedCards,\n                loading: false\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n    render() {\n        if(this.state.loading) return <Loading />\n\n        if(this.state.exchanges.length === 0) return <Message>You don't have offers for exchanges yet...</Message>\n        \n        return (\n            <div>\n                <h2>Offers for exchange</h2>\n                {this.state.exchanges.map(exchange => {\n                    return (\n                        <UserCardExchangeItem exchange={exchange} />\n                    )\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default UserExchanges","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NavMain from \"./components/NavMain\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport Profile from \"./pages/Profile\";\r\nimport AllCards from \"./pages/AllCards\";\r\nimport OneCard from \"./components/OneCard/OneCard\"\r\nimport Auctions from \"./pages/Auctions\";\r\nimport CardsList from \"./components/CardsList/CardsList\";\r\nimport FormSale from \"./components/Forms/FormSale\";\r\nimport UserAuctions from \"./pages/UserAuctions\";\r\n// import TestApi from \"./pages/TestApi\";\r\nimport OpenForExchanges from \"./components/Exchange/OpenForExchange\"\r\nimport UserExchanges from \"./components/Exchange/UserExchanges\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavMain />\r\n      <Switch>\r\n        {/* <Route path=\"/test\" component={TestApi} /> */}\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/signin\" component= {Signin} />\r\n        <Route exact path=\"/signup\" component= {Signup} />\r\n        <Route exact path=\"/cards\" component= {AllCards} />\r\n        <Route exact path=\"/cards/:id\" component ={OneCard} />\r\n        <Route exact path=\"/auctions\" component= {Auctions} />\r\n        <Route exact path=\"/exchanges\" component={OpenForExchanges} />\r\n        <ProtectedRoute exact path=\"/profile\" component= {Profile} />\r\n        <ProtectedRoute path=\"/profile/cards\" component={CardsList} />\r\n        <ProtectedRoute exact path=\"/profile/cards/:id\" component={FormSale} />\r\n        <ProtectedRoute path=\"/profile/auctions\" component={UserAuctions} />\r\n        <ProtectedRoute path=\"/profile/exchanges\" component={UserExchanges} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport UserProvider from \"./components/Auth/UserProvider\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}