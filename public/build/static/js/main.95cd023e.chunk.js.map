{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Auth/UserProvider.jsx","components/Auth/withUser.jsx","components/NavMain.jsx","pages/Home.jsx","components/Forms/FormSignin.jsx","pages/Signin.jsx","components/Forms/FormSignup.jsx","pages/Signup.jsx","components/ProtectedRoute.jsx","pages/Profile.jsx","components/OneCardItemList.jsx","components/Forms/FormField.jsx","components/SearchBar/SearchBar.jsx","components/Loading.jsx","pages/AllCards.jsx","components/OneCard/ActionButtons.jsx","components/Auctions/OneOffer.jsx","components/Auctions/OffersTable.jsx","components/OneCard/CardInfo.jsx","components/OneCard/OneCardContainer.jsx","components/Exchange/SelectCardsBox.jsx","components/Exchange/OneListing.jsx","components/Exchange/TableListings.jsx","components/OneCard/OneCard.jsx","components/Auctions/AuctionItem.jsx","pages/Auctions.jsx","components/Forms/FormSale.jsx","components/UserCards/BtnExchangeStatus.jsx","components/UserCards/UserCardsList.jsx","components/Auctions/UserAuctionItem.jsx","pages/UserAuctions.jsx","components/Exchange/OpenForExchange.jsx","components/Message.jsx","components/Exchange/ExchangeOfferBox.jsx","components/Exchange/UserCardExchangeItem.jsx","components/Exchange/UserExchanges.jsx","App.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","console","log","apiHandler","signup","userInfo","post","then","res","catch","signin","logout","get","isLoggedIn","getOneCard","id","getItems","getOneCardFromApi","getApiByPage","page","filterApiByName","name","getAllUserCards","addCard","card","updateCard","updatedCard","patch","getUserCollection","type","getOneUserCard","createBid","bid","deleteBid","delete","findCardsOnSale","findUserAuctions","findAuction","updatedBids","newBid","getAllUserCardsFromApiCard","apiId","getCardsOnSale","tcgId","getAllCardsOpenForExchange","getAllCardsOneOfApiIdOpenForExchange","createExchange","exchange","getUserCardsOpenForExchange","deleteExchange","UserContext","React","createContext","UserProvider","state","user","isLoading","setUser","setState","removeUser","authValues","this","Provider","value","props","children","Component","withUser","ComponentToPassUserContextTo","Consumer","context","className","exact","to","Fragment","class","email","onClick","Home","FormSignin","password","handleChange","event","key","target","handleSubmit","preventDefault","onChange","onSubmit","htmlFor","withRouter","Signin","FormSignup","username","history","push","Signup","component","rest","render","Profile","OneCardItemList","src","images","small","alt","height","width","FormField","label","SearchBar","handleNameInputChange","bind","e","Loading","AllCards","cards","loading","loadingItems","prevY","getPokemonsByName","input","a","pokemonTCGId","err","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","curPage","getAllPokemons","prevProp","prevState","loadingTextCSS","display","style","minHeight","map","ref","margin","length","OneCardActions","handleAdd","getUserCardsFromModel","userCards","_id","OneOffer","getCurrentAuction","auction","currentBid","previousBid","updatedBid","onBid","bidPlaced","displayCurrentBid","finalFunction","offer","buyer","userId","hasHighestBid","timer","currentAuction","setTimeout","clearTimeout","owner","cardState","initialPrice","endDate","OffersTable","offers","CardInfo","pokemon","subtypes","supertype","hp","attacks","damage","text","weaknesses","resistances","set","number","total","rarity","symbol","artist","OneCardContainer","large","SelectCardsBox","OneListing","exchangeItems","array","deleteCard","newArr","filter","checked","exchangeOffer","seller","sellerItem","buyerItem","cardPromises","Promise","all","responses","populatedCards","i","cardmarket","prices","averageSellPrice","item","TableListings","OneCard","formDisplayed","cardsOnSale","cardsOpenForExchange","TCGId","match","params","handleBid","apiInfo","openForExchange","ActionButtons","putCardOnSale","showForm","displaySaleForm","AuctionItem","link","Bids","SellCardForm","startDate","Date","now","status","bidCreated","onSale","price","cardInfo","disabled","endTime","BtnExchangeStatus","handleClick","CardsList","searchName","getAllCards","updateStatus","FormSale","UserAuctionItem","handleAccept","handleDelete","UserAuctions","auctions","myAuctions","promises","populatedBids","OpenForExchange","Message","ExchangeOfferBox","items","populatedItems","UserCardExchangeItem","updatedSellerItem","updatedBuyerItem","handleDecline","UserExchanges","exchanges","myExchanges","App","path","Auctions","OpenForExchanges","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.95cd023e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\r\n});\r\n\r\nfunction errorHandler(error) {\r\n  if (error.response.data) {\r\n    console.log(error.response && error.response.data);\r\n    throw error;\r\n  }\r\n  throw error;\r\n}\r\n\r\nconst apiHandler = {\r\n  service,\r\n\r\n  signup(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signup\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  signin(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signin\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  logout() {\r\n    return service\r\n      .get(\"/api/auth/logout\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  isLoggedIn() {\r\n    return service\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n  \r\n  getOneCard(id) {\r\n    return service \r\n      .get(\"/api/me/cards/\" + id)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  // getItems() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  getItems() {\r\n    return service\r\n    .get(\"/api/pokemonApi/all\")\r\n    .then((res) => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getItems => getAllCards => will get all the cards from the API\r\n  // getAllCards() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n\r\n  getOneCardFromApi(id) {\r\n    return service\r\n    .get(`/api/pokemonApi/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getApiByPage(page) {\r\n    return service \r\n    .get(`/api/pokemonApi/all/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  filterApiByName(name, page) {\r\n    return service\r\n    .get(`/api/pokemonApi/search/${name}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getAllCards => getAllUserCards removed /api \r\n  getAllUserCards() {\r\n    return service \r\n    .get(\"/api/me/cards\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  addCard(card) {\r\n    return service\r\n    .post(\"/api/me/cards/add\", card)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  updateCard(id, updatedCard) {\r\n    return service\r\n    .patch(`/api/me/cards/${id}/edit`, updatedCard)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  //User Interaction\r\n  //old findUserCollection => getUserCollection removed /api\r\n  getUserCollection(type) {\r\n    return service \r\n    .get(`/api/me/collection/${type}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getOneUserCard(id){\r\n    return service\r\n    .get(\"/api/me/cards/\" + id)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  // Bids \r\n  //create a new bid\r\n  createBid(bid){\r\n    return service\r\n    .post('/api/bids/create', bid)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteBid(bid){\r\n    return service\r\n      .delete(`/api/bids/${bid}`)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  //?? delete this i think\r\n  findCardsOnSale(){\r\n    return service\r\n    .get(`/api/bids`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  findUserAuctions(){\r\n    return service\r\n      .get(\"/api/profile/auctions\")\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n  \r\n  findAuction(id){\r\n    return service\r\n    .get(`/api/bids/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n},\r\n\r\n  updatedBids(id, newBid){\r\n      return service\r\n      .patch(`/api/bids/${id}`, newBid)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  getAllUserCardsFromApiCard(apiId) {\r\n    return service\r\n    .get(\"/api/me/cards/all/\" + apiId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //Get all the cards that are on sale\r\n  getCardsOnSale(tcgId){\r\n    return service\r\n    .get(\"/api/cards/bids/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOpenForExchange() {\r\n    return service \r\n    .get(\"/api/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllCardsOneOfApiIdOpenForExchange(tcgId) {\r\n    return service \r\n    .get(\"/api/exchanges/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  \r\n  createExchange(exchange) {\r\n    return service \r\n    .post(\"/api//profile/exchanges/create\", exchange)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getUserCardsOpenForExchange() {\r\n    return service \r\n    .get(\"/api/profile/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteExchange(id) {\r\n    return service\r\n    .delete(`/api/profile/exchanges/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  }\r\n  \r\n}\r\n\r\nexport default apiHandler;\r\n","import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n","import React, { Component } from \"react\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    apiHandler\r\n      .isLoggedIn()\r\n      .then((data) => {\r\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\r\n      });\r\n  }\r\n\r\n  setUser = (user) => {\r\n    this.setState({ user, isLoggedIn: true });\r\n  };\r\n\r\n  removeUser = () => {\r\n    this.setState({ user: null, isLoggedIn: false });\r\n  };\r\n\r\n  render() {\r\n    //  Setup all the values/functions you want to expose to anybody reading\r\n    // from the AuthContext.\r\n    const authValues = {\r\n      user: this.state.user,\r\n      setUser: this.setUser,\r\n      removeUser: this.removeUser,\r\n      isLoggedIn: this.state.isLoggedIn,\r\n      isLoading: this.state.isLoading,\r\n    };\r\n\r\n    return (\r\n      <UserContext.Provider value={authValues}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProvider;\r\n","import React from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n// This is what we call a HOC (Higher Order Component).\r\n// It takes a component as a parameter and it returns a component.\r\n// This technique can be used to abstract some logic in order to pass\r\n// some data down as props to the component sent as parameter.\r\n\r\n// The use case of this one is to make it easy to access the user context to\r\n// any component in our app.\r\n\r\n/* ******************************************************** */\r\n\r\n//  How to use:  =>\r\n// YourComponent.jsx\r\n// import React from \"react\"\r\n// function or class YourComponent()\r\n//\r\n// ... your implementation.\r\n//\r\n// export default withUser(YourComponent)\r\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\r\n\r\n// This component is not exported as default, so you have to import it\r\n// this way :\r\n// import { withUser } from \"../relative/path/to/this/file\"\r\n\r\nexport const withUser = (ComponentToPassUserContextTo) => {\r\n  return function (props) {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {(context) => (\r\n          <ComponentToPassUserContextTo {...props} context={context} />\r\n        )}\r\n      </UserContext.Consumer>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withUser } from \"../components/Auth/withUser\";\r\nimport apiHandler from \"../api/apiHandler\";\r\n\r\nimport \"../styles/NavMain.css\";\r\n\r\nconst NavMain = (props) => {\r\n  const { context } = props;\r\n\r\n  function handleLogout() {\r\n    apiHandler\r\n      .logout()\r\n      .then(() => {\r\n        context.removeUser();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <nav className=\"NavMain navbar\">\r\n      <NavLink exact to=\"/\">\r\n        <h3 className=\"logo\">PokemonTCG</h3>\r\n      </NavLink>\r\n      <ul className=\"nav-list\">\r\n        {context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/cards\">All Cards</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/cards\">My Cards</NavLink>\r\n            </li>\r\n            <li>\r\n            <div class=\"dropdown\">\r\n              <button class=\"dropbtn\">Shop\r\n                <i class=\"fa fa-caret-down\"></i>\r\n              </button>\r\n              <div class=\"dropdown-content\">\r\n                <NavLink to=\"/auctions\" className=\"NavLink\">All Auctions</NavLink>\r\n                <NavLink to=\"/exchanges\" className=\"NavLink\">All Exchanges</NavLink>\r\n                <NavLink to=\"/profile/auctions\" className=\"NavLink\">My Auctions</NavLink>\r\n                <NavLink to=\"/profile/exchanges\" className=\"NavLink\">My Exchanges</NavLink>\r\n              </div>\r\n            </div>\r\n              \r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile\">\r\n                {context.user && context.user.email}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <p onClick={handleLogout}>Logout</p>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n        {!context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/signin\">Log in</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/signup\">Create account</NavLink>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withUser(NavMain);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>Home</h1>  \r\n          <p><Link to=\"/cards\">See all cards</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { withUser } from \"../Auth/withUser\";\r\n\r\nclass FormSignin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const key = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signin(this.state)\r\n      .then((data) => {\r\n        this.props.context.setUser(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Display error message here, if you set the state\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n        <h2>Signin</h2>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignin));\r\n","import React from \"react\";\r\nimport FormSignin from \"../components/Forms/FormSignin\";\r\n\r\nconst Signin = (props) => {\r\n  return <FormSignin />;\r\n};\r\n\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withUser } from \"../Auth/withUser\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\n\r\nclass FormSignup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    const key = event.target.name;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signup(this.state)\r\n      .then(() => {\r\n        this.props.history.push(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Signup</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.username}\r\n          type=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.email}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.password}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignup));\r\n","import React from \"react\";\r\nimport FormSignup from \"../components/Forms/FormSignup\";\r\n\r\nconst Signup = (props) => {\r\n  return <FormSignup />;\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { withUser } from \"./Auth/withUser\";\r\n\r\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\r\n  if (context.isLoading) {\r\n    return null;\r\n  } else if (context.isLoggedIn) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  } else {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n};\r\n\r\nexport default withUser(ProtectedRoute);\r\n","import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Protected profile</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\n\nconst OneCardItemList = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.key}>\n        <img src={props.card.images.small} alt=\"\" height=\"400px\" width=\"350px\"/>\n        <h2>{props.card.name}</h2>\n        <div>\n        {props.children}\n        </div>\n        </div>\n    )\n}\n\nexport default OneCardItemList\n","import React from 'react'\n\nconst FormField = (props) => {\n    return (\n        <div className=\"FormField\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormField\n","import React, { Component } from 'react';\nimport FormField from '../Forms/FormField';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n    }\n\n    handleNameInputChange(e) {\n        this.props.handleNameInputChange(e.target.value)\n    };\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <form onSubmit={this.props.onSubmit}>\n                    <FormField>\n                        <input\n                        type=\"text\"\n                        value={this.props.name}\n                        onChange={this.handleNameInputChange}\n                        name=\"name\"\n                        />\n                    </FormField>\n                    <button type='submit'>Search</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar\n","import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div>\n            <p>Wait a bit... we need to catch 'em all ! </p>\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { Component } from 'react';\r\nimport '../pages/AllCards.css'\r\nimport OneCardItemList from '../components/OneCardItemList'\r\nimport apiHandler from '../api/apiHandler';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../components/Loading';\r\n\r\nexport class AllCards extends Component {\r\n    state = {\r\n        cards: [],\r\n        loading: false,\r\n        loadingItems : false,\r\n        page: 1,\r\n        prevY: 0,\r\n        name: \"\"\r\n    }\r\n\r\n    getAllPokemons(page){\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        apiHandler.getApiByPage(page)\r\n        .then((res) => {\r\n            this.setState({cards: [...this.state.cards, ...res.data]});\r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        var options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1.0\r\n        }\r\n\r\n        this.observer = new IntersectionObserver(\r\n            this.handleObserver.bind(this),\r\n            options\r\n        );\r\n\r\n        this.observer.observe(this.loadingRef)\r\n    }\r\n\r\n\r\n    getPokemonsByName = (name, page) => {\r\n        this.setState({ loading: true });\r\n        apiHandler.filterApiByName(name, page)\r\n        .then((res) => {\r\n            this.setState({\r\n                cards: res.data,\r\n            });\r\n            this.setState({ loading: false})\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    handleObserver(entities, observer){\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y){\r\n           \r\n            const curPage = this.state.page + 1;\r\n            this.getAllPokemons(curPage);\r\n            this.setState({page: curPage})\r\n        }\r\n        this.setState({prevY: y})\r\n    }\r\n\r\n    handleNameInputChange = (input) => {\r\n        this.setState({\r\n            name: input\r\n        })\r\n    }\r\n\r\n    addCard = async (apiId) => {\r\n        try {\r\n            await apiHandler.addCard({pokemonTCGId: apiId});\r\n        } catch (error) {console.error(error)}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllPokemons(this.state.page);\r\n    }\r\n\r\n    async componentDidUpdate(prevProp, prevState) {\r\n        if(this.state.name !== prevState.name) {\r\n            this.getPokemonsByName(this.state.name);\r\n        }\r\n\r\n        if(this.state.name !== prevState.name && this.state.name === \"\") {\r\n            this.getAllPokemons(this.state.page)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const loadingCSS = {\r\n            height: \"100px\",\r\n            margin: \"30px\"\r\n          };\r\n\r\n        const loadingTextCSS = { display: this.state.loadingItems ? \"block\" : \"none\" };\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Hello</h1>\r\n                <SearchBar \r\n                name={this.state.name}\r\n                handleNameInputChange={this.handleNameInputChange}\r\n                />\r\n\r\n                {this.state.loading && \r\n                <Loading />}\r\n                \r\n                <div>\r\n                    <div style={{ minHeight: \"800px\", display: \"flex\", \"flexWrap\": \"wrap\" }}>\r\n                        {this.state.cards.map(card => (\r\n                            <OneCardItemList card={card}>\r\n                                <div>\r\n                                    <Link to={\"/cards/\" + card.id}>Card details</Link>\r\n                                    <button onClick={() => {this.addCard(card.id)}}>Add Card</button>\r\n                                </div>\r\n                            </OneCardItemList>\r\n\r\n                        ))}\r\n                    </div>\r\n                    \r\n                    <div\r\n                    ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                    style={loadingCSS}\r\n                    >\r\n                        {this.state.cards.length > 0 && \r\n                        <Loading style={loadingTextCSS}/>}\r\n\r\n                    {/* <span style={loadingTextCSS}>Loading...</span> */}\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllCards\r\n\r\n","import React, { Component } from 'react';\n\nclass OneCardActions extends Component {\n\n    handleAdd = () => {\n        this.props.getUserCardsFromModel();\n    }\n\n    render() {\n        const { isLoggedIn, userCards } = this.props.children;\n\n        return (\n            <div>\n                <div>\n                    \n                    {isLoggedIn && \n                    userCards.length === 0 && \n                    <button onClick={this.props.addCard}>Add to my collection</button> } {/* user indicates that they own this card */}\n\n                    {isLoggedIn && \n                    userCards.length > 0 && \n                    <div>\n                        <p>You have {userCards.length} {userCards.length === 1 ? \"version\" : \"versions\"} of this card.</p>\n                        <button onClick={this.props.addCard}>Add another to my collection</button>\n                    </div>}\n\n                    {/* {isLoggedIn &&\n                    userCards.length > 0 && \n                    <button onClick={() => this.props.sellCard(userCards._id)}>Sell</button>} user wants to sell this card */}\n\n                    {isLoggedIn && userCards.map(card => {\n                        return(\n                            <div key={card._id}>\n                                \n                            </div>\n                        )\n                    })}\n\n                    {isLoggedIn && \n                    <div>All the current offers : </div>}\n                    \n                    {!isLoggedIn && \n                    <div>See offers</div>} {/* user seeks to make a bid or exchange to get this card */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OneCardActions\n\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\n\nexport class OneOffer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentBid: 0,\n            previousBid: this.props.offer.bid.currentBid,\n            auction: {},\n            bidPlaced: false,\n            hasHighestBid: false,\n            userId: \"\",\n        }\n        this.timer = null;\n    }\n\n    async componentDidMount(){\n        await apiHandler.isLoggedIn().then((response => {\n            console.log(response)\n            this.setState({\n                userId: response._id\n            })\n        }))\n        console.log(this.state.userId)\n\n        const currentAuction = await apiHandler.findAuction(this.props.offer.bid._id)\n        this.setState({\n            auction: currentAuction\n        })\n        this.displayCurrentBid()\n    }\n\n    getCurrentAuction = async (_id) => {\n        await apiHandler.findAuction(_id)\n            .then((response) => {\n                this.setState({\n                    auction: response\n                })\n            })\n            .catch(error => console.log(error))\n    }\n\n    async componentDidUpdate() {\n        this.timer = setTimeout(() => {\n            this.getCurrentAuction(this.props.offer.bid._id)\n        }, 5000)\n    }\n\n    async componentWillUnmount() {\n        clearTimeout(this.timer)\n    }\n\n    handleChange = (event) => {\n        const key = event.target.name\n        const value = event.target.value\n        this.setState({\n            [key]: value, \n        })\n    }\n\n    handleSubmit = (id) => {\n        if(this.state.currentBid < this.state.previousBid) {\n            console.log(\"current bid is too low\")\n        } else {\n            const updatedBid = {currentBid: this.state.currentBid}\n            apiHandler.updatedBids(id, updatedBid)\n            this.setState({\n                auction: updatedBid\n            })\n            this.props.onBid();\n            this.setState({\n                bidPlaced : true\n            })\n            this.displayCurrentBid();\n        }\n        console.log(this.state)\n    }\n\n    finalFunction = async (id) => {\n        try {\n            await this.handleSubmit(id)\n            await this.props.onBid()\n        } catch (error) {console.log(error)}\n    }\n\n    displayCurrentBid = () => {\n        if(this.props.offer.bid.buyer === this.state.userId) {\n            this.setState({\n                hasHighestBid: true\n            })\n        }\n    }\n\n    render() {\n        console.log(this.state.auction.currentBid)\n        return (\n            <tr key={this.state.auction._id}>\n\n            <td>{this.props.offer.owner.email}</td>\n\n            <td>{this.props.offer.cardState}</td>\n\n            <td>{this.props.offer.bid.initialPrice} $</td>\n\n            <td>{this.state.auction.currentBid ? `${this.state.auction.currentBid} $` : \"Be the first to Bid\"}</td>\n            <td>{this.props.offer.bid.endDate}</td>\n            <td>\n                {this.state.hasHighestBid && \n                <div>\n                <p>You're in the lead !</p>\n                </div>}\n\n                {!this.state.hasHighestBid && \n                    <input \n                    type=\"number\" \n                    name=\"currentBid\" \n                    value={this.state.currentBid}                                          \n                    onChange={this.handleChange} \n                />}\n                \n            </td>\n            <td>\n                <button  onClick={() => this.handleSubmit(this.state.auction._id)} >\n                    Place Bid\n                    </button>\n                </td>\n        </tr>\n        )\n    }\n}\n\nexport default OneOffer;\n\n","import React, { Component } from 'react'\r\nimport \"./OffersTable.css\";\r\nimport OneOffer from './OneOffer';\r\n\r\nexport class OffersTable extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>All the auctions</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Seller</td>\r\n                            <td>Card State</td>\r\n                            <td>Initial Price</td>\r\n                            <td>Current Bid</td>\r\n                            <td>End date</td>\r\n                            <td>Your offer</td>\r\n                            <td>Confirm</td>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.offers.map(e => {\r\n                            \r\n\r\n                            return (\r\n                               <OneOffer \r\n                               offer={e}\r\n                               \r\n                               />\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OffersTable;\r\n","import React, { Component } from 'react';\nimport \"./OneCard.css\"\n\nexport class CardInfo extends Component {\n\n    //Get all the infos about the card being displayed\n\n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"info-container\" style={{\"border\" : \"1px solid black\"}}>\n                <div>\n                    <h2 className=\"pokemon-name\">{this.props.pokemon.name}</h2>\n\n                    <div className=\"pokemon-type\">\n                        <h3>{this.props.pokemon.subtypes[0]} {this.props.pokemon.supertype}</h3>\n                        <p>Health : {this.props.pokemon.hp} HP</p>\n                    </div>\n                </div>\n\n              \n                \n\n                <div className=\"attacks\">\n                    <h2>Attacks : </h2>\n                    {this.props.pokemon.attacks.map(e => {\n                        return(\n                            <div>\n                                <p><b>{e.name}</b><span> {e.damage} </span></p>\n                                <p><b>Description : </b>{e.text}</p>\n                            </div>\n                        )\n\n                    })}\n\n\n                    {/* <p><b>{this.props.pokemon.attacks[0].name}</b><span> {this.props.pokemon.attacks[0].damage} Damage</span></p>\n                    <p>Description : {this.props.pokemon.attacks[0].text}</p>\n                    \n                    <p><b>{this.props.pokemon.attacks[1].name}</b><span> {this.props.pokemon.attacks[1].damage} Damage</span></p>\n                    <p>Description : {this.props.pokemon.attacks[1].text}</p> */}\n                </div>\n\n                <div className=\"pokemon-div-3\">\n\n                    <div className=\"w-r-rc\">\n                        <h2>Weaknesses : </h2>\n                        <div>\n                            \n                            { this.props.pokemon.weaknesses &&\n\n                            \n                            this.props.pokemon.weaknesses.map(e => {\n                                return ( \n                                    <div>\n                                        <p><b>{e.type} :</b> {e.value}</p>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div>\n                            <h2>Resistances : </h2>\n                            {this.props.pokemon.resistances && this.props.pokemon.resistances.map(e => {\n                                return (\n                                    <div>\n                                        <p> <b>{e.type} :</b> {e.value}</p>\n                                    </div>\n                                )\n                            })}\n                            \n                            {this.props.pokemon.resistances &&\n                            <p>{this.props.pokemon.resistances.type} <span>{this.props.pokemon.resistances.value}</span></p>}\n                        </div>\n                    </div>\n\n                    <div className=\"set\">\n                        <h2>Set :</h2>\n                        <div>\n                            <p><b>{this.props.pokemon.set.name}</b> – {this.props.pokemon.name}</p>\n                            <p><b>Rarity : </b>{this.props.pokemon.number}/{this.props.pokemon.set.total} {this.props.pokemon.rarity}</p>\n                        </div>\n                            <p><b>Set Symbol :</b> </p>\n                            <img src={this.props.pokemon.set.images.symbol} alt=\"symbol set\" />\n                    </div>\n                </div>\n                \n                <div><p> <b>Illustrator :</b> {this.props.pokemon.artist}</p></div>\n\n            </div>\n        )\n    }\n}\n\nexport default CardInfo\n","import React from 'react';\nimport CardInfo from './CardInfo';\nimport './OneCardContainer.css'\nconst OneCardContainer = (props) => {\n    return (\n        <div className=\"container\">\n            <div>\n            <img src={props.pokemon.images.large} alt=\"card\"/>\n            </div>\n            \n            <CardInfo pokemon={props.pokemon}/>\n        </div>\n    )\n}\n\nexport default OneCardContainer\n\n\n","import React, { Component } from 'react';\n\nexport class SelectCardsBox extends Component {\n\n    handleChange = (event) => {\n        this.props.handleChange(event)\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <p>Select card(s)</p>\n                {this.props.cards.map(card => {\n                    return(\n                        <div key={card._id}>\n                            <input type=\"checkbox\" id={card._id} onChange={this.props.handleChange} />\n                            <label htmlFor=\"items\">{card.pokemonTCGId.name} – {card._id}</label>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default SelectCardsBox\n","import React, { Component } from 'react';\nimport SelectCardsBox from './SelectCardsBox';\nimport apiHandler from '../../api/apiHandler';\n\nexport class OneListing extends Component {\n\n    state = {\n        loading: true,\n        cards: [],\n        exchangeItems: []\n    }\n\n    addCard = (card) => {\n        let array = this.state.exchangeItems;\n        array.push(card)\n        this.setState({\n            exchangeItems : array\n        })\n    }\n\n    deleteCard = (card) => {\n        let array = [...this.state.exchangeItems];\n        let newArr = array.filter(e => e !== card);\n        this.setState({\n            exchangeItems : newArr\n        })\n    }\n\n    handleChange = (event) => {\n        if(event.target.checked) {\n            this.addCard(event.target.id)\n        } \n        else {\n            this.deleteCard(event.target.id)\n        }\n    }\n\n    handleSubmit = async () => {\n        const exchangeOffer = {\n            seller : this.props.offer.owner._id,\n            sellerItem : this.props.offer._id,\n            buyerItem : this.state.exchangeItems\n        }\n        try {\n            await apiHandler.createExchange(exchangeOffer)\n        }\n        catch (error) {console.error(error)}\n    }\n\n    async componentDidMount() {\n        const cards =  await apiHandler.getAllUserCards();\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n        const responses = await Promise.all(cardPromises);\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards, \n            loading: false\n        })\n    }\n\n    render() {\n        return (\n            <tr key={this.props.offer._id}>\n                <td>{this.props.offer.owner.email}</td>\n                <td>{this.props.offer.cardState}</td>\n                <td>{this.props.pokemon.cardmarket.prices.averageSellPrice}</td>\n                <td>\n                    <div>\n                    {(this.state.loading) && \n                    <div><p>Catching all your pokemons... plz hooold</p></div>\n                    }\n                    {(!this.state.loading) && \n                    <SelectCardsBox \n                    cards={this.state.cards}\n                    exchangeItems={this.state.exchangeItems}\n                    handleChange={this.handleChange}\n                    />\n                    }\n                    </div>\n                </td>\n                <td>\n                    <ul>\n                        {this.state.exchangeItems.map(item => {\n                            return (\n                                <li>{item}</li>\n                            )\n                        }) }\n                    </ul>\n                </td>\n                <td>\n                    <button onClick={this.handleSubmit}>Confirm offer</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default OneListing;\n\n","import React, { Component } from 'react';\nimport OneListing from './OneListing'\n\nexport class TableListings extends Component {\n\n    render() {\n        return (\n            <div>\n                <h3>All listings open for exchange</h3>\n                <table>\n                <thead>\n                    <tr>\n                        <td>Owner</td>\n                        <td>Card state</td>\n                        <td>Average Sell Price</td>\n                        <td>What do you wanna exchange ?</td>\n                        <td>Your current offer</td>\n                        <td>Confirm offer</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.offers.map(offer => {\n                        return (\n                            <OneListing offer={offer} pokemon={this.props.pokemon}/>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nexport default TableListings\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler'\nimport ActionButtons from \"./ActionButtons\"\n// import CardInfo from \"./CardInfo\"\nimport OffersTable from '../Auctions/OffersTable';\nimport \"./OneCard.css\";\nimport OneCardContainer from './OneCardContainer';\nimport TableListings from '../Exchange/TableListings';\n\n\nexport class OneCard extends Component {\n    state = {\n        user: {},\n        pokemon : null,\n        isLoggedIn: false,\n        userCards : [],\n        formDisplayed: false,\n        cardsOnSale: [],\n        cardsOpenForExchange: []\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n            const apiInfo = await apiHandler.getOneCardFromApi(this.props.match.params.id);\n            this.setState({ pokemon: apiInfo});\n            \n            this.getUserCardsFromModel(this.state.pokemon.id)\n\n            const cardsOnSale = await apiHandler.getCardsOnSale(this.state.pokemon.id);\n            this.setState({ cardsOnSale: cardsOnSale });\n\n            const openForExchange = await apiHandler.getAllCardsOneOfApiIdOpenForExchange(this.state.pokemon.id);\n            this.setState({ cardsOpenForExchange: openForExchange})\n        }\n        catch (error) {console.error(error)}\n    }\n\n    getUserCardsFromModel = async (TCGId) => {\n        try {\n            const userCards = await apiHandler.getAllUserCardsFromApiCard(TCGId);\n            this.setState({ userCards: userCards });\n        } \n        catch (error) {console.log(error)}\n    }\n    \n    \n    addCard = async () => {\n        try {\n            await apiHandler.addCard({pokemonTCGId: this.props.match.params.id});\n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards })\n        } catch (error) {console.error(error)}\n    }\n\n    \n    handleBid =  async (event) => {\n        try {      \n            const cards = await apiHandler.getCardsOnSale(this.state.pokemon.id)\n            this.setState({ cardsOnSale: cards })\n        } catch (error) {console.error(error)}\n    }\n    \n    \n    render() {\n\n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n\n            return (\n                <div className=\"OneCard\">\n                    <OneCardContainer pokemon={this.state.pokemon}/>\n                    \n                    <div>\n                    <ActionButtons \n                    addCard={this.addCard} \n                    putCardOnSale={this.putCardOnSale}\n                    showForm={this.displaySaleForm}\n                    >\n                        {this.state}\n                    </ActionButtons>\n\n                    {this.state.cardsOnSale.length > 0 ?\n                        <OffersTable  offers={this.state.cardsOnSale} /> :\n                        <div>No vendor is currently selling this card.</div>\n                    }\n\n                    {this.state.cardsOpenForExchange.length > 0 ? \n                        <TableListings offers={this.state.cardsOpenForExchange} pokemon={this.state.pokemon}/> : \n                        <div>No card is open for exchange for now.</div>\n                    }\n\n                     \n\n                  \n                    </div>\n                </div>\n            )\n        }\n\n    }\n\n\nexport default OneCard\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport OneCardItemList from '../OneCardItemList';\n\nconst AuctionItem = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.card._id}>\n            <OneCardItemList card={props.card.pokemonTCGId} link={\"/profile/cards/\" + props.card._id}/>\n                <div>\n            <p>Average price: {props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n            <Link to={\"/cards/\" + props.card._id}>Bid Details</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default AuctionItem\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler';\r\nimport BidItem from '../components/Auctions/AuctionItem'\r\n\r\nexport class Bids extends Component {\r\n    \r\n    state = { \r\n        cards: [],\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const cards =  await apiHandler.findCardsOnSale();\r\n        \r\n        const cardPromises = cards.map(card => {\r\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\r\n        })\r\n\r\n        const responses = await Promise.all(cardPromises);\r\n\r\n        const populatedCards = cards.map((card,i) => {\r\n          return {\r\n              ...card,\r\n              pokemonTCGId: responses[i]\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n            cards: populatedCards\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \r\n            <div>\r\n                <h1>ALL THE CARDS ON SALE</h1>\r\n                <div>{this.state.cards.map(e => {\r\n                    return (\r\n                        <BidItem card={e} />\r\n                    )\r\n                })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bids\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormField from \"./FormField\"\n\nexport class SellCardForm extends Component {\n    state = {\n        user: {},\n        card : null,\n        isLoggedIn: false,\n        initialPrice: 0,\n        endDate : \"\",\n        cardState: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n            const cardInfo = await apiHandler.getOneCard(this.props.card._id);\n            this.setState({ card: cardInfo});\n            \n            // const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            // this.setState({ userCards: userCards })\n        }\n        catch (error) {console.error(error)}\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    \n    createBid = async (event) => {\n        event.preventDefault();\n\n        const bid = {\n            item: this.props.card._id,\n            initialPrice: this.state.initialPrice,\n            startDate: Date.now(),\n            endDate: this.state.endDate,\n            status: \"ongoing\"\n        }\n        const bidCreated = await apiHandler.createBid(bid)\n        console.log(bidCreated)\n        \n\n        await apiHandler.updateCard(this.props.card._id, {\n            onSale: true, \n            price: this.state.initialPrice,\n            bid: bidCreated._id,\n            cardState: this.state.cardState\n        })\n\n        // console.log(\"bid created\", bidCreated)\n    }\n    \n    render() {\n        \n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n        else {\n            return (\n                <div className=\"OneCard\">\n                    <div className=\"container\">\n                            <div>\n                                <h2>SaleForm</h2>\n\n                                <FormField label=\"Select the state of the card you're selling\" htmlFor=\"cardState\"> \n                                    <select name=\"cardState\" onChange={this.handleChange}>\n                                        <option disabled>Select</option>\n                                        <option value=\"Mint\">Mint</option>\n                                        <option value=\"Near Mint\">Near Mint</option>\n                                        <option value=\"Bad\">Bad</option>\n                                    </select>\n                                </FormField>\n                                <p>Initial Price : {this.props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                <FormField label=\"Choose a price\" htmlFor=\"initialPrice\">\n                                    <input \n                                    type='number'\n                                    onChange={this.handleChange}\n                                    value={this.state.initialPrice}\n                                    name='initialPrice'\n                                    />\n                                </FormField>\n\n                                <FormField label=\"end of the bid\" htmlFor=\"endDate\">\n                                    <input \n                                    type=\"datetime-local\"\n                                    onChange={this.handleChange}\n                                    value={this.state.endTime}\n                                    name=\"endDate\"\n                                    />\n                                </FormField>\n\n                             <button onClick={this.createBid}>Sell</button>\n                            </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default SellCardForm\n","import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler'\n\nexport class BtnExchangeStatus extends Component {\n    state = {\n        openForExchange : this.props.card.openForExchange\n    }\n\n    handleClick = async () => {\n        try {\n            await apiHandler.updateCard(this.props.card._id, {\n                openForExchange: !this.props.card.openForExchange\n            })\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                {!this.props.card.openForExchange && \n                <div>\n                    <p>Not open for exchanges</p>\n                    <button onClick={this.handleClick}>Accept exchanges</button>\n                </div>}\n\n                {this.props.card.openForExchange && \n                <div>\n                    <p>Open for exchanges</p>\n                    <button onClick={this.handleClick}>Refuse exchange</button>\n                </div>}\n                \n                {/* <input type=\"checkbox\" name=\"openForExchange\" defaultChecked={this.state.openForExchange} onClick={this.handleChange}/> */}\n            </div>\n        )\n    }\n}\n\nexport default BtnExchangeStatus\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormSale from '../Forms/FormSale';\nimport OneCardItemList from '../OneCardItemList';\nimport BtnExchangeStatus from './BtnExchangeStatus';\nimport Loading from '../Loading';\nimport {Link} from \"react-router-dom\"\nimport \"./UserCards.css\"\n\nexport class CardsList extends Component {\n    state = {\n        cards: null,\n        searchName : \"\"\n    }\n\n    async componentDidMount() {\n        this.getAllCards()\n        .then((response) => {\n            this.setState({\n                cards: response\n            })\n        })\n        .catch(error => console.error(error))  \n    }\n\n    getAllCards = async () => {\n        try {\n            const cards = await apiHandler.getAllUserCards();\n            const cardPromises = cards.map(card => {\n                return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n            })\n            const responses = await Promise.all(cardPromises);\n            const populatedCards = cards.map((card, i) => {\n                return {\n                    ...card,\n                    pokemonTCGId: responses[i]\n                }\n            });\n            return populatedCards \n        }\n        catch (error) {console.error(error)}\n    }\n\n    updateStatus = () => {\n        // try {\n\n        // }\n        // catch\n        // await apiHandler.getAllUserCardsFromApiCard()\n    }\n\n    render() {\n        if(this.state.cards === null) return <Loading />\n\n        return (\n            <div className=\"CardsList\">\n                <h2>ALL USER'S CARDS</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <div key={card._id}>\n                        <OneCardItemList card={card.pokemonTCGId} link={\"/profile/cards/\" + card._id}>\n                        <Link to={\"/profile/cards/\" + card._id}>See card</Link>\n                        <BtnExchangeStatus card={card}/>\n                    </OneCardItemList>\n                    <FormSale card={card}/>\n                    </div>)\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default CardsList\n","import React, { Component } from 'react';\r\nimport apiHandler from '../../api/apiHandler';\r\nimport OneCardItemList from '../OneCardItemList'\r\n\r\nexport class UserAuctionItem extends Component {\r\n    // state = { \r\n    //     bidId: this.props.auction._id,\r\n    // }\r\n    \r\n    handleAccept = async () => {\r\n        const card = this.props.auction.item\r\n        const updatedCard = {\r\n            owner: this.props.auction.buyer,\r\n            onSale: false,\r\n            price: null,\r\n        }\r\n        await apiHandler.updateCard(card._id, updatedCard)\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid finished\")\r\n    }\r\n\r\n    handleDelete = async () => {\r\n        await apiHandler.deleteBid(this.props.auction._id)\r\n        console.log(\"bid deleted\")\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div key={this.props.auction._id}> \r\n                <OneCardItemList card={this.props.auction.pokemonTCGId}/>\r\n                <div>Current Offer : {this.props.auction.currentBid}</div>\r\n                <button onClick={this.handleAccept}>Accept the offer</button>\r\n                <button onClick={this.handleDelete}>Remove card from sale</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctionItem\r\n","import React, { Component } from 'react'\r\nimport apiHandler from '../api/apiHandler'\r\nimport UserAuctionItem from '../components/Auctions/UserAuctionItem'\r\n\r\nexport class UserAuctions extends Component {\r\n    state = {\r\n        auctions: []\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const myAuctions = await apiHandler.findUserAuctions()\r\n        const promises = myAuctions.map(auction => {\r\n            return ( \r\n                apiHandler.getOneCardFromApi(auction.item.pokemonTCGId)\r\n            )\r\n        })\r\n        const responses = await Promise.all(promises)\r\n        const populatedBids = myAuctions.map((auction, i) => {\r\n            return ( \r\n                {...auction, pokemonTCGId:responses[i]}\r\n            )\r\n        })\r\n        this.setState({\r\n            auctions: populatedBids,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <h1>User Auctions</h1>\r\n                <div>\r\n                    {this.state.auctions.map(e => {\r\n                        return (                           \r\n                            <UserAuctionItem auction={e} />\r\n                        )                      \r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctions\r\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport OneCardItemList from '../OneCardItemList';\nimport { Link } from \"react-router-dom\"\n\n\nexport class OpenForExchange extends Component {\n    state = {\n        cards: null\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllCardsOpenForExchange()\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards\n        })\n        \n    }\n\n    render() {\n        console.log(this.state.cards)\n        if(this.state.cards === null) return (<div>Loading...</div>)\n\n        return (\n            <div>\n                <h2>Cards open for exchanges</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <OneCardItemList card={card.pokemonTCGId} key={card._id}>\n                            <Link to={\"/cards/\" + card.pokemonTCGId.id}>Card details</Link>\n                        </OneCardItemList>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default OpenForExchange\n","import React from 'react'\n\nconst Message = (props) => {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Message\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport Loading from '../Loading';\n\nexport class ExchangeOfferBox extends Component {\n    state = {\n        loading: true,\n        items: null\n    }\n\n    async componentDidMount() {\n        try {\n            const promises = this.props.items.map(item => {\n                return (\n                    apiHandler.getOneCardFromApi(item.pokemonTCGId)\n                )\n            })\n\n            const responses = await Promise.all(promises)\n\n            const populatedItems = this.props.items.map((item, i) => {\n                return (\n                    {...item, pokemonTCGId: responses[i]}\n                )\n            })\n\n            this.setState({\n                items: populatedItems, \n                loading: false\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n\n    render() {\n        if(this.state.loading === true) return <Loading></Loading>\n        return (\n            <div>\n                <ul>\n                    {this.state.items.map(item => {\n                        return (\n                            <li key={item._id + 3}>\n                                <div> \n                                    <img src={item.pokemonTCGId.images.small} alt={\"photo \" + item.pokemonTCGId.name}/>\n                                <p>{item.pokemonTCGId.name}</p>\n                                <p>Average sell price : {item.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                </div>\n                            </li>\n                            \n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ExchangeOfferBox\n","import React from 'react';\nimport OneCardItemList from '../OneCardItemList';\nimport ExchangeOfferBox from './ExchangeOfferBox';\nimport apiHandler from '../../api/apiHandler';\n\nclass UserCardExchangeItem extends React.Component {\n\n    handleAccept = async () => {\n        try {\n            // update seller items\n            const updatedSellerItem = {\n                owner: this.props.exchange.buyer,\n                openForExchange: false\n            }\n            await apiHandler.updateCard(this.props.exchange.sellerItem._id, updatedSellerItem);\n\n            // update buyer items\n            const updatedBuyerItem = {\n                owner: this.props.exchange.seller,\n                openForExchange: false\n            }\n            const promises = this.props.exchange.buyerItem.map(item => {\n                return (\n                    apiHandler.updateCard(item._id, updatedBuyerItem)\n                )\n            })\n            await Promise.all(promises)\n\n            await apiHandler.deleteExchange(this.props.exchange._id)\n\n        }\n        catch (error) { console.error(error)}\n    }\n\n    handleDecline = async () => {\n        await apiHandler.deleteExchange(this.props.exchange._id)\n    }\n\n    render () {\n        console.log(this.props.exchange)\n        return (\n            <div key={this.props.exchange.sellerItem._id +1}>\n                <OneCardItemList \n                card={this.props.exchange.pokemonTCGId}\n                />\n                <div>\n                    <p>Initial price of my card : {this.props.exchange.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                </div>\n                <ExchangeOfferBox items={this.props.exchange.buyerItem}/>\n                <div>\n                    <button onClick={this.handleAccept}>Accept Offer</button>\n                    <button onClick={this.handleDecline}>Decline Offer</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserCardExchangeItem\n","import React, { Component } from 'react';\nimport Loading from '../Loading';\nimport apiHandler from '../../api/apiHandler';\nimport Message from '../Message';\nimport UserCardExchangeItem from './UserCardExchangeItem';\n\nexport class UserExchanges extends Component {\n\n    state = {\n        exchanges: null,\n        loading: true\n    }\n\n    async componentDidMount() {\n        try {\n            const myExchanges = await apiHandler.getUserCardsOpenForExchange();\n            const promises = myExchanges.map(exchange => {\n                return ( \n                    apiHandler.getOneCardFromApi(exchange.sellerItem.pokemonTCGId)\n                )\n            })\n            const responses = await Promise.all(promises)\n            const populatedCards = myExchanges.map((exchange, i) => {\n                return ( \n                    {...exchange, pokemonTCGId:responses[i]}\n                )\n            })\n\n            this.setState({\n                exchanges: populatedCards,\n                loading: false\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n    render() {\n        if(this.state.loading) return <Loading />\n\n        if(this.state.exchanges.length === 0) return <Message>You don't have offers for exchanges yet...</Message>\n        \n        return (\n            <div>\n                <h2>Offers for exchange</h2>\n                {this.state.exchanges.map(exchange => {\n                    return (\n                        <UserCardExchangeItem exchange={exchange} />\n                    )\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default UserExchanges","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NavMain from \"./components/NavMain\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport Profile from \"./pages/Profile\";\r\nimport AllCards from \"./pages/AllCards\";\r\nimport OneCard from \"./components/OneCard/OneCard\"\r\nimport Auctions from \"./pages/Auctions\";\r\nimport CardsList from \"./components/UserCards/UserCardsList\";\r\nimport FormSale from \"./components/Forms/FormSale\";\r\nimport UserAuctions from \"./pages/UserAuctions\";\r\nimport OpenForExchanges from \"./components/Exchange/OpenForExchange\"\r\nimport UserExchanges from \"./components/Exchange/UserExchanges\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavMain />\r\n      <Switch>\r\n        {/* <Route path=\"/test\" component={TestApi} /> */}\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/signin\" component= {Signin} />\r\n        <Route exact path=\"/signup\" component= {Signup} />\r\n        <Route exact path=\"/cards\" component= {AllCards} />\r\n        <Route exact path=\"/cards/:id\" component ={OneCard} />\r\n        <Route exact path=\"/auctions\" component= {Auctions} />\r\n        <Route exact path=\"/exchanges\" component={OpenForExchanges} />\r\n        <ProtectedRoute exact path=\"/profile\" component= {Profile} />\r\n        <ProtectedRoute path=\"/profile/cards\" component={CardsList} />\r\n        <ProtectedRoute exact path=\"/profile/cards/:id\" component={FormSale} />\r\n        <ProtectedRoute path=\"/profile/auctions\" component={UserAuctions} />\r\n        <ProtectedRoute path=\"/profile/exchanges\" component={UserExchanges} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport UserProvider from \"./components/Auth/UserProvider\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}